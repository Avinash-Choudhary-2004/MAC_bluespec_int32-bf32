//
// Generated by Bluespec Compiler, version 2021.12.1 (build fd501401)
//
// On Mon Oct 28 23:31:09 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// RDY_read_in                    O     1
// mac_calc                       O    32
// RDY_mac_calc                   O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// read_in_mul_in                 I    65
// EN_read_in                     I     1
// EN_mac_calc                    I     1
//
// Combinational paths from inputs to outputs:
//   EN_mac_calc -> RDY_read_in
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMac(CLK,
	     RST_N,

	     read_in_mul_in,
	     EN_read_in,
	     RDY_read_in,

	     EN_mac_calc,
	     mac_calc,
	     RDY_mac_calc);
  input  CLK;
  input  RST_N;

  // action method read_in
  input  [64 : 0] read_in_mul_in;
  input  EN_read_in;
  output RDY_read_in;

  // actionvalue method mac_calc
  input  EN_mac_calc;
  output [31 : 0] mac_calc;
  output RDY_mac_calc;

  // signals for module outputs
  wire [31 : 0] mac_calc;
  wire RDY_mac_calc, RDY_read_in;

  // inlined wires
  wire [65 : 0] adder_ififo_rv_port0__write_1,
		adder_ififo_rv_port1__read,
		adder_ififo_rv_port1__write_1,
		adder_ififo_rv_port2__read,
		multiplier_ififo_rv_port1__read,
		multiplier_ififo_rv_port1__write_1,
		multiplier_ififo_rv_port2__read;
  wire [32 : 0] adder_ofifo_rv_port0__write_1,
		adder_ofifo_rv_port1__read,
		adder_ofifo_rv_port1__write_1,
		adder_ofifo_rv_port2__read;

  // register adder_ififo_rv
  reg [65 : 0] adder_ififo_rv;
  wire [65 : 0] adder_ififo_rv_D_IN;
  wire adder_ififo_rv_EN;

  // register adder_ofifo_rv
  reg [32 : 0] adder_ofifo_rv;
  wire [32 : 0] adder_ofifo_rv_D_IN;
  wire adder_ofifo_rv_EN;

  // register multiplier_ififo_rv
  reg [65 : 0] multiplier_ififo_rv;
  wire [65 : 0] multiplier_ififo_rv_D_IN;
  wire multiplier_ififo_rv_EN;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_pipeline_addStage,
       CAN_FIRE_RL_rl_pipeline_mulStage,
       CAN_FIRE_mac_calc,
       CAN_FIRE_read_in,
       WILL_FIRE_RL_rl_pipeline_addStage,
       WILL_FIRE_RL_rl_pipeline_mulStage,
       WILL_FIRE_mac_calc,
       WILL_FIRE_read_in;

  // remaining internal signals
  wire [31 : 0] IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d111,
		IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d114,
		IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d118,
		IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d122,
		IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d127,
		IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d132,
		IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d138,
		IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d144,
		IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d151,
		IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d158,
		IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d166,
		IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d174,
		IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d183,
		IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d192,
		IF_adder_ififo_rv_BIT_33_XOR_adder_ififo_rv_BI_ETC__q3,
		IF_adder_ififo_rv_port0__read__09_BIT_0_15_THE_ETC___d672,
		IF_x696_BIT_0_XOR_x841_BIT_0_THEN_1_ELSE_0__q2,
		adder_ififo_rv_port0__read__09_BIT_64_16_XOR_a_ETC___d671,
		product___1__h1888,
		product___1__h1889,
		product___2__h1842,
		product__h1837,
		product__h2290,
		product__h2313,
		product__h2336,
		product__h2359,
		product__h2382,
		product__h2405,
		product__h2428,
		product__h2451,
		product__h2474,
		product__h2497,
		product__h2520,
		product__h2543,
		product__h2566,
		product__h2589,
		product__h2612,
		product__h910,
		x__h867;
  wire [29 : 0] adder_ififo_rv_port0__read__09_BIT_62_42_XOR_a_ETC___d670;
  wire [27 : 0] adder_ififo_rv_port0__read__09_BIT_60_48_XOR_a_ETC___d669;
  wire [25 : 0] adder_ififo_rv_port0__read__09_BIT_58_54_XOR_a_ETC___d668;
  wire [23 : 0] IF_IF_IF_adder_ififo_rv_port0__read__09_BITS_6_ETC___d434,
		adder_ififo_rv_port0__read__09_BIT_56_60_XOR_a_ETC___d667,
		c_mant_aligned___1__h3848,
		c_mant_aligned__h2919,
		result_mant_aligned___1__h9844,
		result_mant_aligned__h2917,
		result_mant_aligned__h2929,
		result_mant_aligned__h3771,
		x__h3696,
		x__h3841;
  wire [22 : 0] IF_IF_adder_ififo_rv_port0__read__09_BITS_63_T_ETC___d431;
  wire [21 : 0] adder_ififo_rv_port0__read__09_BIT_54_66_XOR_a_ETC___d666;
  wire [19 : 0] adder_ififo_rv_port0__read__09_BIT_52_72_XOR_a_ETC___d665;
  wire [17 : 0] adder_ififo_rv_port0__read__09_BIT_50_78_XOR_a_ETC___d664;
  wire [15 : 0] IF_IF_multiplier_ififo_rv_port0__read_BIT_39_2_ETC___d59,
		IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1,
		IF_multiplier_ififo_rv_port0__read_BIT_33_8_TH_ETC___d21,
		IF_multiplier_ififo_rv_port0__read_BIT_34_7_TH_ETC___d24,
		IF_multiplier_ififo_rv_port0__read_BIT_35_6_TH_ETC___d28,
		IF_multiplier_ififo_rv_port0__read_BIT_36_5_TH_ETC___d32,
		IF_multiplier_ififo_rv_port0__read_BIT_37_4_TH_ETC___d37,
		IF_multiplier_ififo_rv_port0__read_BIT_38_3_TH_ETC___d42,
		IF_multiplier_ififo_rv_port0__read_BIT_39_2_TH_ETC___d53,
		IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89,
		_theResult_____1_fst__h1543,
		adder_ififo_rv_port0__read__09_BIT_48_84_XOR_a_ETC___d663,
		product__h1241,
		product__h1264,
		product__h1287,
		product__h1310,
		product__h1333,
		product__h1356,
		product__h1379,
		result_mant___1__h1431,
		result_mant__h1453;
  wire [13 : 0] adder_ififo_rv_port0__read__09_BIT_46_90_XOR_a_ETC___d662;
  wire [11 : 0] adder_ififo_rv_port0__read__09_BIT_44_96_XOR_a_ETC___d661;
  wire [9 : 0] adder_ififo_rv_port0__read__09_BIT_42_02_XOR_a_ETC___d660;
  wire [7 : 0] _0_CONCAT_IF_IF_multiplier_ififo_rv_port0__read_ETC___d69,
	       _theResult_____1_snd_fst__h1545,
	       _theResult_____1_snd_fst__h1551,
	       _theResult_____2_fst__h9747,
	       adder_ififo_rv_port0__read__09_BIT_40_08_XOR_a_ETC___d659,
	       delta_exp__h3769,
	       delta_exp__h3846,
	       i__h9813,
	       i__h9828,
	       result_exp___1__h1432,
	       result_exp___1__h1596,
	       result_exp___1__h9751,
	       result_exp__h2921,
	       result_exp__h914,
	       result_exp__h917,
	       rounded_result_mant__h1547,
	       x__h1613;
  wire [5 : 0] adder_ififo_rv_port0__read__09_BIT_38_14_XOR_a_ETC___d658;
  wire [3 : 0] adder_ififo_rv_port0__read__09_BIT_36_20_XOR_a_ETC___d657;
  wire [1 : 0] adder_ififo_rv_port0__read__09_BIT_34_26_XOR_a_ETC___d656;
  wire IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d370,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d385,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d387,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d388,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d389,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d390,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d391,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d392,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d393,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d394,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d395,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d396,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d397,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d398,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d399,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d400,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d401,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d402,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d403,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d404,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d405,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d406,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d407,
       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d408,
       _theResult___snd_snd_snd_snd__h3845,
       adder_ififo_rv_port0__read__09_BITS_63_TO_56_1_ETC___d219,
       round_flag__h3770,
       round_flag__h3847,
       x__h10671,
       x__h10859,
       x__h10916,
       x__h11047,
       x__h11104,
       x__h11235,
       x__h11292,
       x__h11423,
       x__h11480,
       x__h11611,
       x__h11668,
       x__h11799,
       x__h11856,
       x__h11987,
       x__h12044,
       x__h12175,
       x__h12232,
       x__h12363,
       x__h12420,
       x__h12551,
       x__h12608,
       x__h12739,
       x__h12796,
       x__h12927,
       x__h12984,
       x__h13115,
       x__h13172,
       x__h13303,
       x__h13360,
       x__h13491,
       x__h13548,
       x__h13679,
       x__h13736,
       x__h13867,
       x__h13924,
       x__h14055,
       x__h14112,
       x__h14243,
       x__h14300,
       x__h14431,
       x__h14488,
       x__h14619,
       x__h14676,
       x__h14807,
       x__h14864,
       x__h14995,
       x__h15052,
       x__h15183,
       x__h15240,
       x__h15371,
       x__h15428,
       x__h15559,
       x__h15616,
       x__h15747,
       x__h15804,
       x__h15935,
       x__h15992,
       x__h16123,
       x__h16180,
       x__h16311,
       x__h16368,
       x__h3949,
       x__h4137,
       x__h4194,
       x__h4325,
       x__h4382,
       x__h4513,
       x__h4570,
       x__h4701,
       x__h4758,
       x__h4889,
       x__h4946,
       x__h5077,
       x__h5134,
       x__h5265,
       x__h5322,
       x__h5453,
       x__h5510,
       x__h5641,
       x__h5698,
       x__h5829,
       x__h5886,
       x__h6017,
       x__h6074,
       x__h6205,
       x__h6262,
       x__h6393,
       x__h6450,
       x__h6581,
       x__h6638,
       x__h6769,
       x__h6826,
       x__h6957,
       x__h7014,
       x__h7145,
       x__h7202,
       x__h7333,
       x__h7390,
       x__h7521,
       x__h7578,
       x__h7709,
       x__h7766,
       x__h7897,
       x__h7954,
       x__h8085,
       x__h8142,
       x__h8330,
       y__h10672,
       y__h10860,
       y__h10917,
       y__h11048,
       y__h11105,
       y__h11236,
       y__h11293,
       y__h11424,
       y__h11481,
       y__h11612,
       y__h11669,
       y__h11800,
       y__h11857,
       y__h11988,
       y__h12045,
       y__h12176,
       y__h12233,
       y__h12364,
       y__h12421,
       y__h12552,
       y__h12609,
       y__h12740,
       y__h12797,
       y__h12928,
       y__h12985,
       y__h13116,
       y__h13173,
       y__h13304,
       y__h13361,
       y__h13492,
       y__h13549,
       y__h13680,
       y__h13737,
       y__h13868,
       y__h13925,
       y__h14056,
       y__h14113,
       y__h14244,
       y__h14301,
       y__h14432,
       y__h14489,
       y__h14620,
       y__h14677,
       y__h14808,
       y__h14865,
       y__h14996,
       y__h15053,
       y__h15184,
       y__h15241,
       y__h15372,
       y__h15429,
       y__h15560,
       y__h15617,
       y__h15748,
       y__h15805,
       y__h15936,
       y__h15993,
       y__h16124,
       y__h16181,
       y__h16312,
       y__h16369,
       y__h3950,
       y__h4138,
       y__h4195,
       y__h4326,
       y__h4383,
       y__h4514,
       y__h4571,
       y__h4702,
       y__h4759,
       y__h4890,
       y__h4947,
       y__h5078,
       y__h5135,
       y__h5266,
       y__h5323,
       y__h5454,
       y__h5511,
       y__h5642,
       y__h5699,
       y__h5830,
       y__h5887,
       y__h6018,
       y__h6075,
       y__h6206,
       y__h6263,
       y__h6394,
       y__h6451,
       y__h6582,
       y__h6639,
       y__h6770,
       y__h6827,
       y__h6958,
       y__h7015,
       y__h7146,
       y__h7203,
       y__h7334,
       y__h7391,
       y__h7522,
       y__h7579,
       y__h7710,
       y__h7767,
       y__h7898,
       y__h7955,
       y__h8086,
       y__h8143,
       y__h8331;

  // action method read_in
  assign RDY_read_in = !multiplier_ififo_rv_port1__read[65] ;
  assign CAN_FIRE_read_in = !multiplier_ififo_rv_port1__read[65] ;
  assign WILL_FIRE_read_in = EN_read_in ;

  // actionvalue method mac_calc
  assign mac_calc = adder_ofifo_rv[31:0] ;
  assign RDY_mac_calc = adder_ofifo_rv[32] ;
  assign CAN_FIRE_mac_calc = adder_ofifo_rv[32] ;
  assign WILL_FIRE_mac_calc = EN_mac_calc ;

  // rule RL_rl_pipeline_addStage
  assign CAN_FIRE_RL_rl_pipeline_addStage =
	     adder_ififo_rv[65] && !adder_ofifo_rv_port1__read[32] ;
  assign WILL_FIRE_RL_rl_pipeline_addStage =
	     CAN_FIRE_RL_rl_pipeline_addStage ;

  // rule RL_rl_pipeline_mulStage
  assign CAN_FIRE_RL_rl_pipeline_mulStage =
	     multiplier_ififo_rv[65] && !adder_ififo_rv_port1__read[65] ;
  assign WILL_FIRE_RL_rl_pipeline_mulStage =
	     CAN_FIRE_RL_rl_pipeline_mulStage ;

  // inlined wires
  assign multiplier_ififo_rv_port1__read =
	     CAN_FIRE_RL_rl_pipeline_mulStage ?
	       adder_ififo_rv_port0__write_1 :
	       multiplier_ififo_rv ;
  assign multiplier_ififo_rv_port1__write_1 = { 1'd1, read_in_mul_in } ;
  assign multiplier_ififo_rv_port2__read =
	     EN_read_in ?
	       multiplier_ififo_rv_port1__write_1 :
	       multiplier_ififo_rv_port1__read ;
  assign adder_ififo_rv_port0__write_1 =
	     { 1'd0,
	       65'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign adder_ififo_rv_port1__read =
	     CAN_FIRE_RL_rl_pipeline_addStage ?
	       adder_ififo_rv_port0__write_1 :
	       adder_ififo_rv ;
  assign adder_ififo_rv_port1__write_1 =
	     { 1'd1, x__h867, multiplier_ififo_rv[32:0] } ;
  assign adder_ififo_rv_port2__read =
	     CAN_FIRE_RL_rl_pipeline_mulStage ?
	       adder_ififo_rv_port1__write_1 :
	       adder_ififo_rv_port1__read ;
  assign adder_ofifo_rv_port0__write_1 =
	     { 1'd0,
	       32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign adder_ofifo_rv_port1__read =
	     EN_mac_calc ? adder_ofifo_rv_port0__write_1 : adder_ofifo_rv ;
  assign adder_ofifo_rv_port1__write_1 =
	     { 1'd1,
	       IF_adder_ififo_rv_port0__read__09_BIT_0_15_THE_ETC___d672 } ;
  assign adder_ofifo_rv_port2__read =
	     CAN_FIRE_RL_rl_pipeline_addStage ?
	       adder_ofifo_rv_port1__write_1 :
	       adder_ofifo_rv_port1__read ;

  // register adder_ififo_rv
  assign adder_ififo_rv_D_IN = adder_ififo_rv_port2__read ;
  assign adder_ififo_rv_EN = 1'b1 ;

  // register adder_ofifo_rv
  assign adder_ofifo_rv_D_IN = adder_ofifo_rv_port2__read ;
  assign adder_ofifo_rv_EN = 1'b1 ;

  // register multiplier_ififo_rv
  assign multiplier_ififo_rv_D_IN = multiplier_ififo_rv_port2__read ;
  assign multiplier_ififo_rv_EN = 1'b1 ;

  // remaining internal signals
  assign IF_IF_IF_adder_ififo_rv_port0__read__09_BITS_6_ETC___d434 =
	     (IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d370 ?
		IF_x696_BIT_0_XOR_x841_BIT_0_THEN_1_ELSE_0__q2[0] :
		_theResult___snd_snd_snd_snd__h3845) ?
	       result_mant_aligned___1__h9844 :
	       result_mant_aligned__h2929 ;
  assign IF_IF_adder_ififo_rv_port0__read__09_BITS_63_T_ETC___d431 =
	     IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d370 ?
	       { IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d385,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d387,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d388,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d389,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d390,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d391,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d392,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d393,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d394,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d395,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d396,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d397,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d398,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d399,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d400,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d401,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d402,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d403,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d404,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d405,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d406,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d407,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d408 } :
	       { IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d387,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d388,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d389,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d390,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d391,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d392,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d393,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d394,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d395,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d396,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d397,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d398,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d399,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d400,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d401,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d402,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d403,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d404,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d405,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d406,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d407,
		 IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d408,
		 IF_x696_BIT_0_XOR_x841_BIT_0_THEN_1_ELSE_0__q2[0] } ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_39_2_ETC___d59 =
	     IF_multiplier_ififo_rv_port0__read_BIT_39_2_TH_ETC___d53[15] ?
	       result_mant___1__h1431 :
	       result_mant__h1453 ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d111 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[0] ?
	       product__h2612 :
	       32'd0 ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d114 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[1] ?
	       product__h2589 :
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d111 ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d118 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[2] ?
	       product__h2566 :
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d114 ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d122 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[3] ?
	       product__h2543 :
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d118 ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d127 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[4] ?
	       product__h2520 :
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d122 ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d132 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[5] ?
	       product__h2497 :
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d127 ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d138 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[6] ?
	       product__h2474 :
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d132 ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d144 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[7] ?
	       product__h2451 :
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d138 ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d151 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[8] ?
	       product__h2428 :
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d144 ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d158 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[9] ?
	       product__h2405 :
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d151 ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d166 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[10] ?
	       product__h2382 :
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d158 ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d174 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[11] ?
	       product__h2359 :
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d166 ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d183 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[12] ?
	       product__h2336 :
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d174 ;
  assign IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d192 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[13] ?
	       product__h2313 :
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d183 ;
  assign IF_adder_ififo_rv_BIT_33_XOR_adder_ififo_rv_BI_ETC__q3 =
	     (adder_ififo_rv[33] ^ adder_ififo_rv[1]) ? 32'd1 : 32'd0 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d370 =
	     x__h8330 | y__h8331 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d385 =
	     x__h8085 ^ y__h8086 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d387 =
	     x__h7897 ^ y__h7898 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d388 =
	     x__h7709 ^ y__h7710 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d389 =
	     x__h7521 ^ y__h7522 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d390 =
	     x__h7333 ^ y__h7334 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d391 =
	     x__h7145 ^ y__h7146 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d392 =
	     x__h6957 ^ y__h6958 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d393 =
	     x__h6769 ^ y__h6770 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d394 =
	     x__h6581 ^ y__h6582 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d395 =
	     x__h6393 ^ y__h6394 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d396 =
	     x__h6205 ^ y__h6206 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d397 =
	     x__h6017 ^ y__h6018 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d398 =
	     x__h5829 ^ y__h5830 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d399 =
	     x__h5641 ^ y__h5642 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d400 =
	     x__h5453 ^ y__h5454 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d401 =
	     x__h5265 ^ y__h5266 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d402 =
	     x__h5077 ^ y__h5078 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d403 =
	     x__h4889 ^ y__h4890 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d404 =
	     x__h4701 ^ y__h4702 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d405 =
	     x__h4513 ^ y__h4514 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d406 =
	     x__h4325 ^ y__h4326 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d407 =
	     x__h4137 ^ y__h4138 ;
  assign IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d408 =
	     x__h3949 ^ y__h3950 ;
  assign IF_adder_ififo_rv_port0__read__09_BIT_0_15_THE_ETC___d672 =
	     adder_ififo_rv[0] ?
	       { adder_ififo_rv[64],
		 _theResult_____2_fst__h9747,
		 IF_IF_IF_adder_ififo_rv_port0__read__09_BITS_6_ETC___d434[22:0] } :
	       adder_ififo_rv_port0__read__09_BIT_64_16_XOR_a_ETC___d671 ;
  assign IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1 =
	     multiplier_ififo_rv[64] ?
	       ~multiplier_ififo_rv[64:49] + 16'd1 :
	       multiplier_ififo_rv[64:49] ;
  assign IF_multiplier_ififo_rv_port0__read_BIT_33_8_TH_ETC___d21 =
	     multiplier_ififo_rv[33] ? product__h1379 : 16'd0 ;
  assign IF_multiplier_ififo_rv_port0__read_BIT_34_7_TH_ETC___d24 =
	     multiplier_ififo_rv[34] ?
	       product__h1356 :
	       IF_multiplier_ififo_rv_port0__read_BIT_33_8_TH_ETC___d21 ;
  assign IF_multiplier_ififo_rv_port0__read_BIT_35_6_TH_ETC___d28 =
	     multiplier_ififo_rv[35] ?
	       product__h1333 :
	       IF_multiplier_ififo_rv_port0__read_BIT_34_7_TH_ETC___d24 ;
  assign IF_multiplier_ififo_rv_port0__read_BIT_36_5_TH_ETC___d32 =
	     multiplier_ififo_rv[36] ?
	       product__h1310 :
	       IF_multiplier_ififo_rv_port0__read_BIT_35_6_TH_ETC___d28 ;
  assign IF_multiplier_ififo_rv_port0__read_BIT_37_4_TH_ETC___d37 =
	     multiplier_ififo_rv[37] ?
	       product__h1287 :
	       IF_multiplier_ififo_rv_port0__read_BIT_36_5_TH_ETC___d32 ;
  assign IF_multiplier_ififo_rv_port0__read_BIT_38_3_TH_ETC___d42 =
	     multiplier_ififo_rv[38] ?
	       product__h1264 :
	       IF_multiplier_ififo_rv_port0__read_BIT_37_4_TH_ETC___d37 ;
  assign IF_multiplier_ififo_rv_port0__read_BIT_39_2_TH_ETC___d53 =
	     (multiplier_ififo_rv[39] ?
		product__h1241 :
		IF_multiplier_ififo_rv_port0__read_BIT_38_3_TH_ETC___d42) +
	     { 2'd1, multiplier_ififo_rv[55:49], 7'd0 } ;
  assign IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89 =
	     multiplier_ififo_rv[48] ?
	       ~multiplier_ififo_rv[48:33] + 16'd1 :
	       multiplier_ififo_rv[48:33] ;
  assign IF_x696_BIT_0_XOR_x841_BIT_0_THEN_1_ELSE_0__q2 =
	     (x__h3696[0] ^ x__h3841[0]) ? 32'd1 : 32'd0 ;
  assign _0_CONCAT_IF_IF_multiplier_ififo_rv_port0__read_ETC___d69 =
	     rounded_result_mant__h1547 + 8'd1 ;
  assign _theResult_____1_fst__h1543 =
	     { (IF_IF_multiplier_ififo_rv_port0__read_BIT_39_2_ETC___d59[8] &&
		(IF_IF_multiplier_ififo_rv_port0__read_BIT_39_2_ETC___d59[9] ||
		 IF_IF_multiplier_ififo_rv_port0__read_BIT_39_2_ETC___d59[7:0] !=
		 8'b0)) ?
		 _0_CONCAT_IF_IF_multiplier_ififo_rv_port0__read_ETC___d69[6:0] :
		 IF_IF_multiplier_ififo_rv_port0__read_BIT_39_2_ETC___d59[15:9],
	       9'd0 } ;
  assign _theResult_____1_snd_fst__h1545 =
	     (IF_IF_multiplier_ififo_rv_port0__read_BIT_39_2_ETC___d59[8] &&
	      (IF_IF_multiplier_ififo_rv_port0__read_BIT_39_2_ETC___d59[9] ||
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_39_2_ETC___d59[7:0] !=
	       8'b0)) ?
	       _theResult_____1_snd_fst__h1551 :
	       result_exp__h917 ;
  assign _theResult_____1_snd_fst__h1551 =
	     _0_CONCAT_IF_IF_multiplier_ififo_rv_port0__read_ETC___d69[7] ?
	       result_exp___1__h1596 :
	       result_exp__h917 ;
  assign _theResult_____2_fst__h9747 =
	     IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d370 ?
	       result_exp___1__h9751 :
	       result_exp__h2921 ;
  assign _theResult___snd_snd_snd_snd__h3845 =
	     adder_ififo_rv_port0__read__09_BITS_63_TO_56_1_ETC___d219 ?
	       round_flag__h3770 :
	       round_flag__h3847 ;
  assign adder_ififo_rv_port0__read__09_BITS_63_TO_56_1_ETC___d219 =
	     adder_ififo_rv[63:56] <= adder_ififo_rv[31:24] ;
  assign adder_ififo_rv_port0__read__09_BIT_34_26_XOR_a_ETC___d656 =
	     { x__h10671 ^ y__h10672,
	       IF_adder_ififo_rv_BIT_33_XOR_adder_ififo_rv_BI_ETC__q3[0] } ;
  assign adder_ififo_rv_port0__read__09_BIT_36_20_XOR_a_ETC___d657 =
	     { x__h11047 ^ y__h11048,
	       x__h10859 ^ y__h10860,
	       adder_ififo_rv_port0__read__09_BIT_34_26_XOR_a_ETC___d656 } ;
  assign adder_ififo_rv_port0__read__09_BIT_38_14_XOR_a_ETC___d658 =
	     { x__h11423 ^ y__h11424,
	       x__h11235 ^ y__h11236,
	       adder_ififo_rv_port0__read__09_BIT_36_20_XOR_a_ETC___d657 } ;
  assign adder_ififo_rv_port0__read__09_BIT_40_08_XOR_a_ETC___d659 =
	     { x__h11799 ^ y__h11800,
	       x__h11611 ^ y__h11612,
	       adder_ififo_rv_port0__read__09_BIT_38_14_XOR_a_ETC___d658 } ;
  assign adder_ififo_rv_port0__read__09_BIT_42_02_XOR_a_ETC___d660 =
	     { x__h12175 ^ y__h12176,
	       x__h11987 ^ y__h11988,
	       adder_ififo_rv_port0__read__09_BIT_40_08_XOR_a_ETC___d659 } ;
  assign adder_ififo_rv_port0__read__09_BIT_44_96_XOR_a_ETC___d661 =
	     { x__h12551 ^ y__h12552,
	       x__h12363 ^ y__h12364,
	       adder_ififo_rv_port0__read__09_BIT_42_02_XOR_a_ETC___d660 } ;
  assign adder_ififo_rv_port0__read__09_BIT_46_90_XOR_a_ETC___d662 =
	     { x__h12927 ^ y__h12928,
	       x__h12739 ^ y__h12740,
	       adder_ififo_rv_port0__read__09_BIT_44_96_XOR_a_ETC___d661 } ;
  assign adder_ififo_rv_port0__read__09_BIT_48_84_XOR_a_ETC___d663 =
	     { x__h13303 ^ y__h13304,
	       x__h13115 ^ y__h13116,
	       adder_ififo_rv_port0__read__09_BIT_46_90_XOR_a_ETC___d662 } ;
  assign adder_ififo_rv_port0__read__09_BIT_50_78_XOR_a_ETC___d664 =
	     { x__h13679 ^ y__h13680,
	       x__h13491 ^ y__h13492,
	       adder_ififo_rv_port0__read__09_BIT_48_84_XOR_a_ETC___d663 } ;
  assign adder_ififo_rv_port0__read__09_BIT_52_72_XOR_a_ETC___d665 =
	     { x__h14055 ^ y__h14056,
	       x__h13867 ^ y__h13868,
	       adder_ififo_rv_port0__read__09_BIT_50_78_XOR_a_ETC___d664 } ;
  assign adder_ififo_rv_port0__read__09_BIT_54_66_XOR_a_ETC___d666 =
	     { x__h14431 ^ y__h14432,
	       x__h14243 ^ y__h14244,
	       adder_ififo_rv_port0__read__09_BIT_52_72_XOR_a_ETC___d665 } ;
  assign adder_ififo_rv_port0__read__09_BIT_56_60_XOR_a_ETC___d667 =
	     { x__h14807 ^ y__h14808,
	       x__h14619 ^ y__h14620,
	       adder_ififo_rv_port0__read__09_BIT_54_66_XOR_a_ETC___d666 } ;
  assign adder_ififo_rv_port0__read__09_BIT_58_54_XOR_a_ETC___d668 =
	     { x__h15183 ^ y__h15184,
	       x__h14995 ^ y__h14996,
	       adder_ififo_rv_port0__read__09_BIT_56_60_XOR_a_ETC___d667 } ;
  assign adder_ififo_rv_port0__read__09_BIT_60_48_XOR_a_ETC___d669 =
	     { x__h15559 ^ y__h15560,
	       x__h15371 ^ y__h15372,
	       adder_ififo_rv_port0__read__09_BIT_58_54_XOR_a_ETC___d668 } ;
  assign adder_ififo_rv_port0__read__09_BIT_62_42_XOR_a_ETC___d670 =
	     { x__h15935 ^ y__h15936,
	       x__h15747 ^ y__h15748,
	       adder_ififo_rv_port0__read__09_BIT_60_48_XOR_a_ETC___d669 } ;
  assign adder_ififo_rv_port0__read__09_BIT_64_16_XOR_a_ETC___d671 =
	     { x__h16311 ^ y__h16312,
	       x__h16123 ^ y__h16124,
	       adder_ififo_rv_port0__read__09_BIT_62_42_XOR_a_ETC___d670 } ;
  assign c_mant_aligned___1__h3848 =
	     c_mant_aligned__h2919 >> delta_exp__h3846 ;
  assign c_mant_aligned__h2919 = { 1'b1, adder_ififo_rv[23:1] } ;
  assign delta_exp__h3769 = adder_ififo_rv[31:24] - adder_ififo_rv[63:56] ;
  assign delta_exp__h3846 = adder_ififo_rv[63:56] - adder_ififo_rv[31:24] ;
  assign i__h9813 = delta_exp__h3846 - 8'd1 ;
  assign i__h9828 = delta_exp__h3769 - 8'd1 ;
  assign product___1__h1888 = ~product___2__h1842 ;
  assign product___1__h1889 = product___1__h1888 + 32'd1 ;
  assign product___2__h1842 =
	     IF_multiplier_ififo_rv_port0__read_BIT_48_0_TH_ETC___d89[14] ?
	       product__h2290 :
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d192 ;
  assign product__h1241 =
	     IF_multiplier_ififo_rv_port0__read_BIT_38_3_TH_ETC___d42 +
	     { 3'd1, multiplier_ififo_rv[55:49], 6'd0 } ;
  assign product__h1264 =
	     IF_multiplier_ififo_rv_port0__read_BIT_37_4_TH_ETC___d37 +
	     { 4'd1, multiplier_ififo_rv[55:49], 5'd0 } ;
  assign product__h1287 =
	     IF_multiplier_ififo_rv_port0__read_BIT_36_5_TH_ETC___d32 +
	     { 5'd1, multiplier_ififo_rv[55:49], 4'd0 } ;
  assign product__h1310 =
	     IF_multiplier_ififo_rv_port0__read_BIT_35_6_TH_ETC___d28 +
	     { 6'd1, multiplier_ififo_rv[55:49], 3'd0 } ;
  assign product__h1333 =
	     IF_multiplier_ififo_rv_port0__read_BIT_34_7_TH_ETC___d24 +
	     { 7'd1, multiplier_ififo_rv[55:49], 2'd0 } ;
  assign product__h1356 =
	     IF_multiplier_ififo_rv_port0__read_BIT_33_8_TH_ETC___d21 +
	     { 8'd1, multiplier_ififo_rv[55:49], 1'd0 } ;
  assign product__h1379 = { 9'd1, multiplier_ififo_rv[55:49] } ;
  assign product__h1837 =
	     (multiplier_ififo_rv[64] == multiplier_ififo_rv[48]) ?
	       product___2__h1842 :
	       product___1__h1889 ;
  assign product__h2290 =
	     IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d192 +
	     { 3'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0],
	       14'd0 } ;
  assign product__h2313 =
	     IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d183 +
	     { 4'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0],
	       13'd0 } ;
  assign product__h2336 =
	     IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d174 +
	     { 5'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0],
	       12'd0 } ;
  assign product__h2359 =
	     IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d166 +
	     { 6'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0],
	       11'd0 } ;
  assign product__h2382 =
	     IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d158 +
	     { 7'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0],
	       10'd0 } ;
  assign product__h2405 =
	     IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d151 +
	     { 8'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0],
	       9'd0 } ;
  assign product__h2428 =
	     IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d144 +
	     { 9'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0],
	       8'd0 } ;
  assign product__h2451 =
	     IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d138 +
	     { 10'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0],
	       7'd0 } ;
  assign product__h2474 =
	     IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d132 +
	     { 11'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0],
	       6'd0 } ;
  assign product__h2497 =
	     IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d127 +
	     { 12'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0],
	       5'd0 } ;
  assign product__h2520 =
	     IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d122 +
	     { 13'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0],
	       4'd0 } ;
  assign product__h2543 =
	     IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d118 +
	     { 14'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0],
	       3'd0 } ;
  assign product__h2566 =
	     IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d114 +
	     { 15'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0],
	       2'd0 } ;
  assign product__h2589 =
	     IF_IF_multiplier_ififo_rv_port0__read_BIT_48_0_ETC___d111 +
	     { 16'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0],
	       1'd0 } ;
  assign product__h2612 =
	     { 17'd0,
	       IF_multiplier_ififo_rv_BIT_64_THEN_INV_multipl_ETC__q1[14:0] } ;
  assign product__h910 =
	     { multiplier_ififo_rv[64] ^ multiplier_ififo_rv[48],
	       _theResult_____1_snd_fst__h1545,
	       _theResult_____1_fst__h1543,
	       7'b0 } ;
  assign result_exp___1__h1432 = x__h1613 + 8'd130 ;
  assign result_exp___1__h1596 = result_exp__h917 + 8'd1 ;
  assign result_exp___1__h9751 = result_exp__h2921 + 8'd1 ;
  assign result_exp__h2921 =
	     adder_ififo_rv_port0__read__09_BITS_63_TO_56_1_ETC___d219 ?
	       adder_ififo_rv[31:24] :
	       adder_ififo_rv[63:56] ;
  assign result_exp__h914 = x__h1613 + 8'd129 ;
  assign result_exp__h917 =
	     IF_multiplier_ififo_rv_port0__read_BIT_39_2_TH_ETC___d53[15] ?
	       result_exp___1__h1432 :
	       result_exp__h914 ;
  assign result_mant___1__h1431 =
	     { IF_multiplier_ififo_rv_port0__read_BIT_39_2_TH_ETC___d53[14:0],
	       1'b0 } ;
  assign result_mant__h1453 =
	     { IF_multiplier_ififo_rv_port0__read_BIT_39_2_TH_ETC___d53[13:0],
	       2'b0 } ;
  assign result_mant_aligned___1__h9844 = result_mant_aligned__h2929 + 24'd1 ;
  assign result_mant_aligned__h2917 = { 1'b1, adder_ififo_rv[55:33] } ;
  assign result_mant_aligned__h2929 =
	     { IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d370 ||
	       IF_adder_ififo_rv_port0__read__09_BITS_63_TO_5_ETC___d385,
	       IF_IF_adder_ififo_rv_port0__read__09_BITS_63_T_ETC___d431 } ;
  assign result_mant_aligned__h3771 =
	     result_mant_aligned__h2917 >> delta_exp__h3769 ;
  assign round_flag__h3770 = result_mant_aligned__h2917[i__h9828[4:0]] ;
  assign round_flag__h3847 = c_mant_aligned__h2919[i__h9813[4:0]] ;
  assign rounded_result_mant__h1547 =
	     { 1'd0,
	       IF_IF_multiplier_ififo_rv_port0__read_BIT_39_2_ETC___d59[15:9] } ;
  assign x__h10671 = adder_ififo_rv[34] ^ adder_ififo_rv[2] ;
  assign x__h10859 = adder_ififo_rv[35] ^ adder_ififo_rv[3] ;
  assign x__h10916 = adder_ififo_rv[34] & adder_ififo_rv[2] ;
  assign x__h11047 = adder_ififo_rv[36] ^ adder_ififo_rv[4] ;
  assign x__h11104 = adder_ififo_rv[35] & adder_ififo_rv[3] ;
  assign x__h11235 = adder_ififo_rv[37] ^ adder_ififo_rv[5] ;
  assign x__h11292 = adder_ififo_rv[36] & adder_ififo_rv[4] ;
  assign x__h11423 = adder_ififo_rv[38] ^ adder_ififo_rv[6] ;
  assign x__h11480 = adder_ififo_rv[37] & adder_ififo_rv[5] ;
  assign x__h11611 = adder_ififo_rv[39] ^ adder_ififo_rv[7] ;
  assign x__h11668 = adder_ififo_rv[38] & adder_ififo_rv[6] ;
  assign x__h11799 = adder_ififo_rv[40] ^ adder_ififo_rv[8] ;
  assign x__h11856 = adder_ififo_rv[39] & adder_ififo_rv[7] ;
  assign x__h11987 = adder_ififo_rv[41] ^ adder_ififo_rv[9] ;
  assign x__h12044 = adder_ififo_rv[40] & adder_ififo_rv[8] ;
  assign x__h12175 = adder_ififo_rv[42] ^ adder_ififo_rv[10] ;
  assign x__h12232 = adder_ififo_rv[41] & adder_ififo_rv[9] ;
  assign x__h12363 = adder_ififo_rv[43] ^ adder_ififo_rv[11] ;
  assign x__h12420 = adder_ififo_rv[42] & adder_ififo_rv[10] ;
  assign x__h12551 = adder_ififo_rv[44] ^ adder_ififo_rv[12] ;
  assign x__h12608 = adder_ififo_rv[43] & adder_ififo_rv[11] ;
  assign x__h12739 = adder_ififo_rv[45] ^ adder_ififo_rv[13] ;
  assign x__h12796 = adder_ififo_rv[44] & adder_ififo_rv[12] ;
  assign x__h12927 = adder_ififo_rv[46] ^ adder_ififo_rv[14] ;
  assign x__h12984 = adder_ififo_rv[45] & adder_ififo_rv[13] ;
  assign x__h13115 = adder_ififo_rv[47] ^ adder_ififo_rv[15] ;
  assign x__h13172 = adder_ififo_rv[46] & adder_ififo_rv[14] ;
  assign x__h13303 = adder_ififo_rv[48] ^ adder_ififo_rv[16] ;
  assign x__h13360 = adder_ififo_rv[47] & adder_ififo_rv[15] ;
  assign x__h13491 = adder_ififo_rv[49] ^ adder_ififo_rv[17] ;
  assign x__h13548 = adder_ififo_rv[48] & adder_ififo_rv[16] ;
  assign x__h13679 = adder_ififo_rv[50] ^ adder_ififo_rv[18] ;
  assign x__h13736 = adder_ififo_rv[49] & adder_ififo_rv[17] ;
  assign x__h13867 = adder_ififo_rv[51] ^ adder_ififo_rv[19] ;
  assign x__h13924 = adder_ififo_rv[50] & adder_ififo_rv[18] ;
  assign x__h14055 = adder_ififo_rv[52] ^ adder_ififo_rv[20] ;
  assign x__h14112 = adder_ififo_rv[51] & adder_ififo_rv[19] ;
  assign x__h14243 = adder_ififo_rv[53] ^ adder_ififo_rv[21] ;
  assign x__h14300 = adder_ififo_rv[52] & adder_ififo_rv[20] ;
  assign x__h14431 = adder_ififo_rv[54] ^ adder_ififo_rv[22] ;
  assign x__h14488 = adder_ififo_rv[53] & adder_ififo_rv[21] ;
  assign x__h14619 = adder_ififo_rv[55] ^ adder_ififo_rv[23] ;
  assign x__h14676 = adder_ififo_rv[54] & adder_ififo_rv[22] ;
  assign x__h14807 = adder_ififo_rv[56] ^ adder_ififo_rv[24] ;
  assign x__h14864 = adder_ififo_rv[55] & adder_ififo_rv[23] ;
  assign x__h14995 = adder_ififo_rv[57] ^ adder_ififo_rv[25] ;
  assign x__h15052 = adder_ififo_rv[56] & adder_ififo_rv[24] ;
  assign x__h15183 = adder_ififo_rv[58] ^ adder_ififo_rv[26] ;
  assign x__h15240 = adder_ififo_rv[57] & adder_ififo_rv[25] ;
  assign x__h15371 = adder_ififo_rv[59] ^ adder_ififo_rv[27] ;
  assign x__h15428 = adder_ififo_rv[58] & adder_ififo_rv[26] ;
  assign x__h15559 = adder_ififo_rv[60] ^ adder_ififo_rv[28] ;
  assign x__h15616 = adder_ififo_rv[59] & adder_ififo_rv[27] ;
  assign x__h15747 = adder_ififo_rv[61] ^ adder_ififo_rv[29] ;
  assign x__h15804 = adder_ififo_rv[60] & adder_ififo_rv[28] ;
  assign x__h15935 = adder_ififo_rv[62] ^ adder_ififo_rv[30] ;
  assign x__h15992 = adder_ififo_rv[61] & adder_ififo_rv[29] ;
  assign x__h16123 = adder_ififo_rv[63] ^ adder_ififo_rv[31] ;
  assign x__h1613 = multiplier_ififo_rv[63:56] + multiplier_ififo_rv[47:40] ;
  assign x__h16180 = adder_ififo_rv[62] & adder_ififo_rv[30] ;
  assign x__h16311 = adder_ififo_rv[64] ^ adder_ififo_rv[32] ;
  assign x__h16368 = adder_ififo_rv[63] & adder_ififo_rv[31] ;
  assign x__h3696 =
	     adder_ififo_rv_port0__read__09_BITS_63_TO_56_1_ETC___d219 ?
	       result_mant_aligned__h3771 :
	       result_mant_aligned__h2917 ;
  assign x__h3841 =
	     adder_ififo_rv_port0__read__09_BITS_63_TO_56_1_ETC___d219 ?
	       c_mant_aligned__h2919 :
	       c_mant_aligned___1__h3848 ;
  assign x__h3949 = x__h3696[1] ^ x__h3841[1] ;
  assign x__h4137 = x__h3696[2] ^ x__h3841[2] ;
  assign x__h4194 = x__h3696[1] & x__h3841[1] ;
  assign x__h4325 = x__h3696[3] ^ x__h3841[3] ;
  assign x__h4382 = x__h3696[2] & x__h3841[2] ;
  assign x__h4513 = x__h3696[4] ^ x__h3841[4] ;
  assign x__h4570 = x__h3696[3] & x__h3841[3] ;
  assign x__h4701 = x__h3696[5] ^ x__h3841[5] ;
  assign x__h4758 = x__h3696[4] & x__h3841[4] ;
  assign x__h4889 = x__h3696[6] ^ x__h3841[6] ;
  assign x__h4946 = x__h3696[5] & x__h3841[5] ;
  assign x__h5077 = x__h3696[7] ^ x__h3841[7] ;
  assign x__h5134 = x__h3696[6] & x__h3841[6] ;
  assign x__h5265 = x__h3696[8] ^ x__h3841[8] ;
  assign x__h5322 = x__h3696[7] & x__h3841[7] ;
  assign x__h5453 = x__h3696[9] ^ x__h3841[9] ;
  assign x__h5510 = x__h3696[8] & x__h3841[8] ;
  assign x__h5641 = x__h3696[10] ^ x__h3841[10] ;
  assign x__h5698 = x__h3696[9] & x__h3841[9] ;
  assign x__h5829 = x__h3696[11] ^ x__h3841[11] ;
  assign x__h5886 = x__h3696[10] & x__h3841[10] ;
  assign x__h6017 = x__h3696[12] ^ x__h3841[12] ;
  assign x__h6074 = x__h3696[11] & x__h3841[11] ;
  assign x__h6205 = x__h3696[13] ^ x__h3841[13] ;
  assign x__h6262 = x__h3696[12] & x__h3841[12] ;
  assign x__h6393 = x__h3696[14] ^ x__h3841[14] ;
  assign x__h6450 = x__h3696[13] & x__h3841[13] ;
  assign x__h6581 = x__h3696[15] ^ x__h3841[15] ;
  assign x__h6638 = x__h3696[14] & x__h3841[14] ;
  assign x__h6769 = x__h3696[16] ^ x__h3841[16] ;
  assign x__h6826 = x__h3696[15] & x__h3841[15] ;
  assign x__h6957 = x__h3696[17] ^ x__h3841[17] ;
  assign x__h7014 = x__h3696[16] & x__h3841[16] ;
  assign x__h7145 = x__h3696[18] ^ x__h3841[18] ;
  assign x__h7202 = x__h3696[17] & x__h3841[17] ;
  assign x__h7333 = x__h3696[19] ^ x__h3841[19] ;
  assign x__h7390 = x__h3696[18] & x__h3841[18] ;
  assign x__h7521 = x__h3696[20] ^ x__h3841[20] ;
  assign x__h7578 = x__h3696[19] & x__h3841[19] ;
  assign x__h7709 = x__h3696[21] ^ x__h3841[21] ;
  assign x__h7766 = x__h3696[20] & x__h3841[20] ;
  assign x__h7897 = x__h3696[22] ^ x__h3841[22] ;
  assign x__h7954 = x__h3696[21] & x__h3841[21] ;
  assign x__h8085 = x__h3696[23] ^ x__h3841[23] ;
  assign x__h8142 = x__h3696[22] & x__h3841[22] ;
  assign x__h8330 = x__h3696[23] & x__h3841[23] ;
  assign x__h867 = multiplier_ififo_rv[0] ? product__h910 : product__h1837 ;
  assign y__h10672 = adder_ififo_rv[33] & adder_ififo_rv[1] ;
  assign y__h10860 = x__h10916 | y__h10917 ;
  assign y__h10917 = y__h10672 & x__h10671 ;
  assign y__h11048 = x__h11104 | y__h11105 ;
  assign y__h11105 = y__h10860 & x__h10859 ;
  assign y__h11236 = x__h11292 | y__h11293 ;
  assign y__h11293 = y__h11048 & x__h11047 ;
  assign y__h11424 = x__h11480 | y__h11481 ;
  assign y__h11481 = y__h11236 & x__h11235 ;
  assign y__h11612 = x__h11668 | y__h11669 ;
  assign y__h11669 = y__h11424 & x__h11423 ;
  assign y__h11800 = x__h11856 | y__h11857 ;
  assign y__h11857 = y__h11612 & x__h11611 ;
  assign y__h11988 = x__h12044 | y__h12045 ;
  assign y__h12045 = y__h11800 & x__h11799 ;
  assign y__h12176 = x__h12232 | y__h12233 ;
  assign y__h12233 = y__h11988 & x__h11987 ;
  assign y__h12364 = x__h12420 | y__h12421 ;
  assign y__h12421 = y__h12176 & x__h12175 ;
  assign y__h12552 = x__h12608 | y__h12609 ;
  assign y__h12609 = y__h12364 & x__h12363 ;
  assign y__h12740 = x__h12796 | y__h12797 ;
  assign y__h12797 = y__h12552 & x__h12551 ;
  assign y__h12928 = x__h12984 | y__h12985 ;
  assign y__h12985 = y__h12740 & x__h12739 ;
  assign y__h13116 = x__h13172 | y__h13173 ;
  assign y__h13173 = y__h12928 & x__h12927 ;
  assign y__h13304 = x__h13360 | y__h13361 ;
  assign y__h13361 = y__h13116 & x__h13115 ;
  assign y__h13492 = x__h13548 | y__h13549 ;
  assign y__h13549 = y__h13304 & x__h13303 ;
  assign y__h13680 = x__h13736 | y__h13737 ;
  assign y__h13737 = y__h13492 & x__h13491 ;
  assign y__h13868 = x__h13924 | y__h13925 ;
  assign y__h13925 = y__h13680 & x__h13679 ;
  assign y__h14056 = x__h14112 | y__h14113 ;
  assign y__h14113 = y__h13868 & x__h13867 ;
  assign y__h14244 = x__h14300 | y__h14301 ;
  assign y__h14301 = y__h14056 & x__h14055 ;
  assign y__h14432 = x__h14488 | y__h14489 ;
  assign y__h14489 = y__h14244 & x__h14243 ;
  assign y__h14620 = x__h14676 | y__h14677 ;
  assign y__h14677 = y__h14432 & x__h14431 ;
  assign y__h14808 = x__h14864 | y__h14865 ;
  assign y__h14865 = y__h14620 & x__h14619 ;
  assign y__h14996 = x__h15052 | y__h15053 ;
  assign y__h15053 = y__h14808 & x__h14807 ;
  assign y__h15184 = x__h15240 | y__h15241 ;
  assign y__h15241 = y__h14996 & x__h14995 ;
  assign y__h15372 = x__h15428 | y__h15429 ;
  assign y__h15429 = y__h15184 & x__h15183 ;
  assign y__h15560 = x__h15616 | y__h15617 ;
  assign y__h15617 = y__h15372 & x__h15371 ;
  assign y__h15748 = x__h15804 | y__h15805 ;
  assign y__h15805 = y__h15560 & x__h15559 ;
  assign y__h15936 = x__h15992 | y__h15993 ;
  assign y__h15993 = y__h15748 & x__h15747 ;
  assign y__h16124 = x__h16180 | y__h16181 ;
  assign y__h16181 = y__h15936 & x__h15935 ;
  assign y__h16312 = x__h16368 | y__h16369 ;
  assign y__h16369 = y__h16124 & x__h16123 ;
  assign y__h3950 = x__h3696[0] & x__h3841[0] ;
  assign y__h4138 = x__h4194 | y__h4195 ;
  assign y__h4195 = y__h3950 & x__h3949 ;
  assign y__h4326 = x__h4382 | y__h4383 ;
  assign y__h4383 = y__h4138 & x__h4137 ;
  assign y__h4514 = x__h4570 | y__h4571 ;
  assign y__h4571 = y__h4326 & x__h4325 ;
  assign y__h4702 = x__h4758 | y__h4759 ;
  assign y__h4759 = y__h4514 & x__h4513 ;
  assign y__h4890 = x__h4946 | y__h4947 ;
  assign y__h4947 = y__h4702 & x__h4701 ;
  assign y__h5078 = x__h5134 | y__h5135 ;
  assign y__h5135 = y__h4890 & x__h4889 ;
  assign y__h5266 = x__h5322 | y__h5323 ;
  assign y__h5323 = y__h5078 & x__h5077 ;
  assign y__h5454 = x__h5510 | y__h5511 ;
  assign y__h5511 = y__h5266 & x__h5265 ;
  assign y__h5642 = x__h5698 | y__h5699 ;
  assign y__h5699 = y__h5454 & x__h5453 ;
  assign y__h5830 = x__h5886 | y__h5887 ;
  assign y__h5887 = y__h5642 & x__h5641 ;
  assign y__h6018 = x__h6074 | y__h6075 ;
  assign y__h6075 = y__h5830 & x__h5829 ;
  assign y__h6206 = x__h6262 | y__h6263 ;
  assign y__h6263 = y__h6018 & x__h6017 ;
  assign y__h6394 = x__h6450 | y__h6451 ;
  assign y__h6451 = y__h6206 & x__h6205 ;
  assign y__h6582 = x__h6638 | y__h6639 ;
  assign y__h6639 = y__h6394 & x__h6393 ;
  assign y__h6770 = x__h6826 | y__h6827 ;
  assign y__h6827 = y__h6582 & x__h6581 ;
  assign y__h6958 = x__h7014 | y__h7015 ;
  assign y__h7015 = y__h6770 & x__h6769 ;
  assign y__h7146 = x__h7202 | y__h7203 ;
  assign y__h7203 = y__h6958 & x__h6957 ;
  assign y__h7334 = x__h7390 | y__h7391 ;
  assign y__h7391 = y__h7146 & x__h7145 ;
  assign y__h7522 = x__h7578 | y__h7579 ;
  assign y__h7579 = y__h7334 & x__h7333 ;
  assign y__h7710 = x__h7766 | y__h7767 ;
  assign y__h7767 = y__h7522 & x__h7521 ;
  assign y__h7898 = x__h7954 | y__h7955 ;
  assign y__h7955 = y__h7710 & x__h7709 ;
  assign y__h8086 = x__h8142 | y__h8143 ;
  assign y__h8143 = y__h7898 & x__h7897 ;
  assign y__h8331 = y__h8086 & x__h8085 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        adder_ififo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      65'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	adder_ofifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	multiplier_ififo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      65'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
      end
    else
      begin
        if (adder_ififo_rv_EN)
	  adder_ififo_rv <= `BSV_ASSIGNMENT_DELAY adder_ififo_rv_D_IN;
	if (adder_ofifo_rv_EN)
	  adder_ofifo_rv <= `BSV_ASSIGNMENT_DELAY adder_ofifo_rv_D_IN;
	if (multiplier_ififo_rv_EN)
	  multiplier_ififo_rv <= `BSV_ASSIGNMENT_DELAY
	      multiplier_ififo_rv_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    adder_ififo_rv = 66'h2AAAAAAAAAAAAAAAA;
    adder_ofifo_rv = 33'h0AAAAAAAA;
    multiplier_ififo_rv = 66'h2AAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkMac

