// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Tracing implementation internals
#include "verilated_vcd_c.h"
#include "Vtop__Syms.h"


//======================

void Vtop::trace(VerilatedVcdC* tfp, int, int) {
    tfp->spTrace()->addInitCb(&traceInit, __VlSymsp);
    traceRegister(tfp->spTrace());
}

void Vtop::traceInit(void* userp, VerilatedVcd* tracep, uint32_t code) {
    // Callback from tracep->open()
    Vtop__Syms* __restrict vlSymsp = static_cast<Vtop__Syms*>(userp);
    if (!Verilated::calcUnusedSigs()) {
        VL_FATAL_MT(__FILE__, __LINE__, __FILE__,
                        "Turning on wave traces requires Verilated::traceEverOn(true) call before time 0.");
    }
    vlSymsp->__Vm_baseCode = code;
    tracep->module(vlSymsp->name());
    tracep->scopeEscape(' ');
    Vtop::traceInitTop(vlSymsp, tracep);
    tracep->scopeEscape('.');
}

//======================


void Vtop::traceInitTop(void* userp, VerilatedVcd* tracep) {
    Vtop__Syms* __restrict vlSymsp = static_cast<Vtop__Syms*>(userp);
    Vtop* const __restrict vlTOPp VL_ATTR_UNUSED = vlSymsp->TOPp;
    // Body
    {
        vlTOPp->traceInitSub0(userp, tracep);
    }
}

void Vtop::traceInitSub0(void* userp, VerilatedVcd* tracep) {
    Vtop__Syms* __restrict vlSymsp = static_cast<Vtop__Syms*>(userp);
    Vtop* const __restrict vlTOPp VL_ATTR_UNUSED = vlSymsp->TOPp;
    const int c = vlSymsp->__Vm_baseCode;
    if (false && tracep && c) {}  // Prevent unused
    // Body
    {
        tracep->declBit(c+1,"CLK", false,-1);
        tracep->declBit(c+2,"RST_N", false,-1);
        tracep->declBus(c+3,"read_A_a_in", false,-1, 15,0);
        tracep->declBit(c+4,"EN_read_A", false,-1);
        tracep->declBit(c+5,"RDY_read_A", false,-1);
        tracep->declBus(c+6,"read_B_b_in", false,-1, 15,0);
        tracep->declBit(c+7,"EN_read_B", false,-1);
        tracep->declBit(c+8,"RDY_read_B", false,-1);
        tracep->declBus(c+9,"read_C_c_in", false,-1, 31,0);
        tracep->declBit(c+10,"EN_read_C", false,-1);
        tracep->declBit(c+11,"RDY_read_C", false,-1);
        tracep->declBit(c+12,"read_S_s_in", false,-1);
        tracep->declBit(c+13,"EN_read_S", false,-1);
        tracep->declBit(c+14,"RDY_read_S", false,-1);
        tracep->declBit(c+15,"EN_mac_calc", false,-1);
        tracep->declBus(c+16,"mac_calc", false,-1, 31,0);
        tracep->declBit(c+17,"RDY_mac_calc", false,-1);
        tracep->declBit(c+18,"mkCounter CLK", false,-1);
        tracep->declBit(c+19,"mkCounter RST_N", false,-1);
        tracep->declBus(c+20,"mkCounter read_A_a_in", false,-1, 15,0);
        tracep->declBit(c+21,"mkCounter EN_read_A", false,-1);
        tracep->declBit(c+22,"mkCounter RDY_read_A", false,-1);
        tracep->declBus(c+23,"mkCounter read_B_b_in", false,-1, 15,0);
        tracep->declBit(c+24,"mkCounter EN_read_B", false,-1);
        tracep->declBit(c+25,"mkCounter RDY_read_B", false,-1);
        tracep->declBus(c+26,"mkCounter read_C_c_in", false,-1, 31,0);
        tracep->declBit(c+27,"mkCounter EN_read_C", false,-1);
        tracep->declBit(c+28,"mkCounter RDY_read_C", false,-1);
        tracep->declBit(c+29,"mkCounter read_S_s_in", false,-1);
        tracep->declBit(c+30,"mkCounter EN_read_S", false,-1);
        tracep->declBit(c+31,"mkCounter RDY_read_S", false,-1);
        tracep->declBit(c+32,"mkCounter EN_mac_calc", false,-1);
        tracep->declBus(c+33,"mkCounter mac_calc", false,-1, 31,0);
        tracep->declBit(c+34,"mkCounter RDY_mac_calc", false,-1);
        tracep->declBus(c+35,"mkCounter a", false,-1, 15,0);
        tracep->declBus(c+36,"mkCounter a_D_IN", false,-1, 15,0);
        tracep->declBit(c+37,"mkCounter a_EN", false,-1);
        tracep->declBus(c+38,"mkCounter b", false,-1, 15,0);
        tracep->declBus(c+39,"mkCounter b_D_IN", false,-1, 15,0);
        tracep->declBit(c+40,"mkCounter b_EN", false,-1);
        tracep->declBus(c+41,"mkCounter c", false,-1, 31,0);
        tracep->declBus(c+42,"mkCounter c_D_IN", false,-1, 31,0);
        tracep->declBit(c+43,"mkCounter c_EN", false,-1);
        tracep->declBus(c+44,"mkCounter out", false,-1, 31,0);
        tracep->declBus(c+45,"mkCounter out_D_IN", false,-1, 31,0);
        tracep->declBit(c+46,"mkCounter out_EN", false,-1);
        tracep->declBit(c+47,"mkCounter s", false,-1);
        tracep->declBit(c+48,"mkCounter s_D_IN", false,-1);
        tracep->declBit(c+49,"mkCounter s_EN", false,-1);
        tracep->declBit(c+50,"mkCounter CAN_FIRE_mac_calc", false,-1);
        tracep->declBit(c+51,"mkCounter CAN_FIRE_read_A", false,-1);
        tracep->declBit(c+52,"mkCounter CAN_FIRE_read_B", false,-1);
        tracep->declBit(c+53,"mkCounter CAN_FIRE_read_C", false,-1);
        tracep->declBit(c+54,"mkCounter CAN_FIRE_read_S", false,-1);
        tracep->declBit(c+55,"mkCounter WILL_FIRE_mac_calc", false,-1);
        tracep->declBit(c+56,"mkCounter WILL_FIRE_read_A", false,-1);
        tracep->declBit(c+57,"mkCounter WILL_FIRE_read_B", false,-1);
        tracep->declBit(c+58,"mkCounter WILL_FIRE_read_C", false,-1);
        tracep->declBit(c+59,"mkCounter WILL_FIRE_read_S", false,-1);
        tracep->declBus(c+60,"mkCounter IF_IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF__ETC__q2", false,-1, 31,0);
        tracep->declBus(c+61,"mkCounter IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b__ETC___d100", false,-1, 31,0);
        tracep->declBus(c+62,"mkCounter IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b__ETC___d106", false,-1, 31,0);
        tracep->declBus(c+63,"mkCounter IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b__ETC___d113", false,-1, 31,0);
        tracep->declBus(c+64,"mkCounter IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b__ETC___d120", false,-1, 31,0);
        tracep->declBus(c+65,"mkCounter IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b__ETC___d128", false,-1, 31,0);
        tracep->declBus(c+66,"mkCounter IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b__ETC___d136", false,-1, 31,0);
        tracep->declBus(c+67,"mkCounter IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b__ETC___d145", false,-1, 31,0);
        tracep->declBus(c+68,"mkCounter IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b__ETC___d154", false,-1, 31,0);
        tracep->declBus(c+69,"mkCounter IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b__ETC___d73", false,-1, 31,0);
        tracep->declBus(c+70,"mkCounter IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b__ETC___d76", false,-1, 31,0);
        tracep->declBus(c+71,"mkCounter IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b__ETC___d80", false,-1, 31,0);
        tracep->declBus(c+72,"mkCounter IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b__ETC___d84", false,-1, 31,0);
        tracep->declBus(c+73,"mkCounter IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b__ETC___d89", false,-1, 31,0);
        tracep->declBus(c+74,"mkCounter IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b__ETC___d94", false,-1, 31,0);
        tracep->declBus(c+75,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d167", false,-1, 31,0);
        tracep->declBus(c+76,"mkCounter product___1__h1618", false,-1, 31,0);
        tracep->declBus(c+77,"mkCounter product___1__h1619", false,-1, 31,0);
        tracep->declBus(c+78,"mkCounter product___2__h1572", false,-1, 31,0);
        tracep->declBus(c+79,"mkCounter product__h2020", false,-1, 31,0);
        tracep->declBus(c+80,"mkCounter product__h2043", false,-1, 31,0);
        tracep->declBus(c+81,"mkCounter product__h2066", false,-1, 31,0);
        tracep->declBus(c+82,"mkCounter product__h2089", false,-1, 31,0);
        tracep->declBus(c+83,"mkCounter product__h2112", false,-1, 31,0);
        tracep->declBus(c+84,"mkCounter product__h2135", false,-1, 31,0);
        tracep->declBus(c+85,"mkCounter product__h2158", false,-1, 31,0);
        tracep->declBus(c+86,"mkCounter product__h2181", false,-1, 31,0);
        tracep->declBus(c+87,"mkCounter product__h2204", false,-1, 31,0);
        tracep->declBus(c+88,"mkCounter product__h2227", false,-1, 31,0);
        tracep->declBus(c+89,"mkCounter product__h2250", false,-1, 31,0);
        tracep->declBus(c+90,"mkCounter product__h2273", false,-1, 31,0);
        tracep->declBus(c+91,"mkCounter product__h2296", false,-1, 31,0);
        tracep->declBus(c+92,"mkCounter product__h2319", false,-1, 31,0);
        tracep->declBus(c+93,"mkCounter product__h2342", false,-1, 31,0);
        tracep->declBus(c+94,"mkCounter x__h301", false,-1, 31,0);
        tracep->declBus(c+95,"mkCounter x__h821", false,-1, 31,0);
        tracep->declBus(c+96,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d403", false,-1, 29,0);
        tracep->declBus(c+97,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d402", false,-1, 27,0);
        tracep->declBus(c+98,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d401", false,-1, 25,0);
        tracep->declBus(c+99,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d400", false,-1, 23,0);
        tracep->declBus(c+100,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d399", false,-1, 21,0);
        tracep->declBus(c+101,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d398", false,-1, 19,0);
        tracep->declBus(c+102,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d397", false,-1, 17,0);
        tracep->declBus(c+103,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d396", false,-1, 15,0);
        tracep->declBus(c+104,"mkCounter IF_a_BIT_15_THEN_INV_a_PLUS_1_ELSE_a__q1", false,-1, 15,0);
        tracep->declBus(c+105,"mkCounter IF_b_BIT_0_THEN_1_CONCAT_a_0_BITS_6_TO_0_1_2_E_ETC___d13", false,-1, 15,0);
        tracep->declBus(c+106,"mkCounter IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___d52", false,-1, 15,0);
        tracep->declBus(c+107,"mkCounter IF_b_BIT_1_THEN_IF_b_BIT_0_THEN_1_CONCAT_a_0_B_ETC___d16", false,-1, 15,0);
        tracep->declBus(c+108,"mkCounter IF_b_BIT_2_THEN_IF_b_BIT_1_THEN_IF_b_BIT_0_THE_ETC___d20", false,-1, 15,0);
        tracep->declBus(c+109,"mkCounter IF_b_BIT_3_THEN_IF_b_BIT_2_THEN_IF_b_BIT_1_THE_ETC___d24", false,-1, 15,0);
        tracep->declBus(c+110,"mkCounter IF_b_BIT_4_THEN_IF_b_BIT_3_THEN_IF_b_BIT_2_THE_ETC___d29", false,-1, 15,0);
        tracep->declBus(c+111,"mkCounter IF_b_BIT_5_THEN_IF_b_BIT_4_THEN_IF_b_BIT_3_THE_ETC___d34", false,-1, 15,0);
        tracep->declBus(c+112,"mkCounter product__h586", false,-1, 15,0);
        tracep->declBus(c+113,"mkCounter product__h609", false,-1, 15,0);
        tracep->declBus(c+114,"mkCounter product__h632", false,-1, 15,0);
        tracep->declBus(c+115,"mkCounter product__h655", false,-1, 15,0);
        tracep->declBus(c+116,"mkCounter product__h678", false,-1, 15,0);
        tracep->declBus(c+117,"mkCounter product__h701", false,-1, 15,0);
        tracep->declBus(c+118,"mkCounter product__h724", false,-1, 15,0);
        tracep->declBus(c+119,"mkCounter result_mant__h323", false,-1, 15,0);
        tracep->declBus(c+120,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d395", false,-1, 13,0);
        tracep->declBus(c+121,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d394", false,-1, 11,0);
        tracep->declBus(c+122,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d393", false,-1, 9,0);
        tracep->declBus(c+123,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d392", false,-1, 7,0);
        tracep->declBus(c+124,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d391", false,-1, 5,0);
        tracep->declBus(c+125,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d390", false,-1, 3,0);
        tracep->declBus(c+126,"mkCounter IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___d389", false,-1, 1,0);
        tracep->declBit(c+127,"mkCounter x__h2493", false,-1);
        tracep->declBit(c+128,"mkCounter x__h2687", false,-1);
        tracep->declBit(c+129,"mkCounter x__h2746", false,-1);
        tracep->declBit(c+130,"mkCounter x__h2881", false,-1);
        tracep->declBit(c+131,"mkCounter x__h2940", false,-1);
        tracep->declBit(c+132,"mkCounter x__h3075", false,-1);
        tracep->declBit(c+133,"mkCounter x__h3134", false,-1);
        tracep->declBit(c+134,"mkCounter x__h3269", false,-1);
        tracep->declBit(c+135,"mkCounter x__h3328", false,-1);
        tracep->declBit(c+136,"mkCounter x__h3463", false,-1);
        tracep->declBit(c+137,"mkCounter x__h3522", false,-1);
        tracep->declBit(c+138,"mkCounter x__h3657", false,-1);
        tracep->declBit(c+139,"mkCounter x__h3716", false,-1);
        tracep->declBit(c+140,"mkCounter x__h3851", false,-1);
        tracep->declBit(c+141,"mkCounter x__h3910", false,-1);
        tracep->declBit(c+142,"mkCounter x__h4045", false,-1);
        tracep->declBit(c+143,"mkCounter x__h4104", false,-1);
        tracep->declBit(c+144,"mkCounter x__h4239", false,-1);
        tracep->declBit(c+145,"mkCounter x__h4298", false,-1);
        tracep->declBit(c+146,"mkCounter x__h4433", false,-1);
        tracep->declBit(c+147,"mkCounter x__h4492", false,-1);
        tracep->declBit(c+148,"mkCounter x__h4627", false,-1);
        tracep->declBit(c+149,"mkCounter x__h4686", false,-1);
        tracep->declBit(c+150,"mkCounter x__h4821", false,-1);
        tracep->declBit(c+151,"mkCounter x__h4880", false,-1);
        tracep->declBit(c+152,"mkCounter x__h5015", false,-1);
        tracep->declBit(c+153,"mkCounter x__h5074", false,-1);
        tracep->declBit(c+154,"mkCounter x__h5209", false,-1);
        tracep->declBit(c+155,"mkCounter x__h5268", false,-1);
        tracep->declBit(c+156,"mkCounter x__h5403", false,-1);
        tracep->declBit(c+157,"mkCounter x__h5462", false,-1);
        tracep->declBit(c+158,"mkCounter x__h5597", false,-1);
        tracep->declBit(c+159,"mkCounter x__h5656", false,-1);
        tracep->declBit(c+160,"mkCounter x__h5791", false,-1);
        tracep->declBit(c+161,"mkCounter x__h5850", false,-1);
        tracep->declBit(c+162,"mkCounter x__h5985", false,-1);
        tracep->declBit(c+163,"mkCounter x__h6044", false,-1);
        tracep->declBit(c+164,"mkCounter x__h6179", false,-1);
        tracep->declBit(c+165,"mkCounter x__h6238", false,-1);
        tracep->declBit(c+166,"mkCounter x__h6373", false,-1);
        tracep->declBit(c+167,"mkCounter x__h6432", false,-1);
        tracep->declBit(c+168,"mkCounter x__h6567", false,-1);
        tracep->declBit(c+169,"mkCounter x__h6626", false,-1);
        tracep->declBit(c+170,"mkCounter x__h6761", false,-1);
        tracep->declBit(c+171,"mkCounter x__h6820", false,-1);
        tracep->declBit(c+172,"mkCounter x__h6955", false,-1);
        tracep->declBit(c+173,"mkCounter x__h7014", false,-1);
        tracep->declBit(c+174,"mkCounter x__h7149", false,-1);
        tracep->declBit(c+175,"mkCounter x__h7208", false,-1);
        tracep->declBit(c+176,"mkCounter x__h7343", false,-1);
        tracep->declBit(c+177,"mkCounter x__h7402", false,-1);
        tracep->declBit(c+178,"mkCounter x__h7537", false,-1);
        tracep->declBit(c+179,"mkCounter x__h7596", false,-1);
        tracep->declBit(c+180,"mkCounter x__h7731", false,-1);
        tracep->declBit(c+181,"mkCounter x__h7790", false,-1);
        tracep->declBit(c+182,"mkCounter x__h7925", false,-1);
        tracep->declBit(c+183,"mkCounter x__h7984", false,-1);
        tracep->declBit(c+184,"mkCounter x__h8119", false,-1);
        tracep->declBit(c+185,"mkCounter x__h8178", false,-1);
        tracep->declBit(c+186,"mkCounter x__h8313", false,-1);
        tracep->declBit(c+187,"mkCounter x__h8372", false,-1);
        tracep->declBit(c+188,"mkCounter y__h2494", false,-1);
        tracep->declBit(c+189,"mkCounter y__h2688", false,-1);
        tracep->declBit(c+190,"mkCounter y__h2747", false,-1);
        tracep->declBit(c+191,"mkCounter y__h2882", false,-1);
        tracep->declBit(c+192,"mkCounter y__h2941", false,-1);
        tracep->declBit(c+193,"mkCounter y__h3076", false,-1);
        tracep->declBit(c+194,"mkCounter y__h3135", false,-1);
        tracep->declBit(c+195,"mkCounter y__h3270", false,-1);
        tracep->declBit(c+196,"mkCounter y__h3329", false,-1);
        tracep->declBit(c+197,"mkCounter y__h3464", false,-1);
        tracep->declBit(c+198,"mkCounter y__h3523", false,-1);
        tracep->declBit(c+199,"mkCounter y__h3658", false,-1);
        tracep->declBit(c+200,"mkCounter y__h3717", false,-1);
        tracep->declBit(c+201,"mkCounter y__h3852", false,-1);
        tracep->declBit(c+202,"mkCounter y__h3911", false,-1);
        tracep->declBit(c+203,"mkCounter y__h4046", false,-1);
        tracep->declBit(c+204,"mkCounter y__h4105", false,-1);
        tracep->declBit(c+205,"mkCounter y__h4240", false,-1);
        tracep->declBit(c+206,"mkCounter y__h4299", false,-1);
        tracep->declBit(c+207,"mkCounter y__h4434", false,-1);
        tracep->declBit(c+208,"mkCounter y__h4493", false,-1);
        tracep->declBit(c+209,"mkCounter y__h4628", false,-1);
        tracep->declBit(c+210,"mkCounter y__h4687", false,-1);
        tracep->declBit(c+211,"mkCounter y__h4822", false,-1);
        tracep->declBit(c+212,"mkCounter y__h4881", false,-1);
        tracep->declBit(c+213,"mkCounter y__h5016", false,-1);
        tracep->declBit(c+214,"mkCounter y__h5075", false,-1);
        tracep->declBit(c+215,"mkCounter y__h5210", false,-1);
        tracep->declBit(c+216,"mkCounter y__h5269", false,-1);
        tracep->declBit(c+217,"mkCounter y__h5404", false,-1);
        tracep->declBit(c+218,"mkCounter y__h5463", false,-1);
        tracep->declBit(c+219,"mkCounter y__h5598", false,-1);
        tracep->declBit(c+220,"mkCounter y__h5657", false,-1);
        tracep->declBit(c+221,"mkCounter y__h5792", false,-1);
        tracep->declBit(c+222,"mkCounter y__h5851", false,-1);
        tracep->declBit(c+223,"mkCounter y__h5986", false,-1);
        tracep->declBit(c+224,"mkCounter y__h6045", false,-1);
        tracep->declBit(c+225,"mkCounter y__h6180", false,-1);
        tracep->declBit(c+226,"mkCounter y__h6239", false,-1);
        tracep->declBit(c+227,"mkCounter y__h6374", false,-1);
        tracep->declBit(c+228,"mkCounter y__h6433", false,-1);
        tracep->declBit(c+229,"mkCounter y__h6568", false,-1);
        tracep->declBit(c+230,"mkCounter y__h6627", false,-1);
        tracep->declBit(c+231,"mkCounter y__h6762", false,-1);
        tracep->declBit(c+232,"mkCounter y__h6821", false,-1);
        tracep->declBit(c+233,"mkCounter y__h6956", false,-1);
        tracep->declBit(c+234,"mkCounter y__h7015", false,-1);
        tracep->declBit(c+235,"mkCounter y__h7150", false,-1);
        tracep->declBit(c+236,"mkCounter y__h7209", false,-1);
        tracep->declBit(c+237,"mkCounter y__h7344", false,-1);
        tracep->declBit(c+238,"mkCounter y__h7403", false,-1);
        tracep->declBit(c+239,"mkCounter y__h7538", false,-1);
        tracep->declBit(c+240,"mkCounter y__h7597", false,-1);
        tracep->declBit(c+241,"mkCounter y__h7732", false,-1);
        tracep->declBit(c+242,"mkCounter y__h7791", false,-1);
        tracep->declBit(c+243,"mkCounter y__h7926", false,-1);
        tracep->declBit(c+244,"mkCounter y__h7985", false,-1);
        tracep->declBit(c+245,"mkCounter y__h8120", false,-1);
        tracep->declBit(c+246,"mkCounter y__h8179", false,-1);
        tracep->declBit(c+247,"mkCounter y__h8314", false,-1);
        tracep->declBit(c+248,"mkCounter y__h8373", false,-1);
    }
}

void Vtop::traceRegister(VerilatedVcd* tracep) {
    // Body
    {
        tracep->addFullCb(&traceFullTop0, __VlSymsp);
        tracep->addChgCb(&traceChgTop0, __VlSymsp);
        tracep->addCleanupCb(&traceCleanup, __VlSymsp);
    }
}

void Vtop::traceFullTop0(void* userp, VerilatedVcd* tracep) {
    Vtop__Syms* __restrict vlSymsp = static_cast<Vtop__Syms*>(userp);
    Vtop* const __restrict vlTOPp VL_ATTR_UNUSED = vlSymsp->TOPp;
    // Body
    {
        vlTOPp->traceFullSub0(userp, tracep);
    }
}

void Vtop::traceFullSub0(void* userp, VerilatedVcd* tracep) {
    Vtop__Syms* __restrict vlSymsp = static_cast<Vtop__Syms*>(userp);
    Vtop* const __restrict vlTOPp VL_ATTR_UNUSED = vlSymsp->TOPp;
    vluint32_t* const oldp = tracep->oldp(vlSymsp->__Vm_baseCode);
    if (false && oldp) {}  // Prevent unused
    // Body
    {
        tracep->fullBit(oldp+1,(vlTOPp->CLK));
        tracep->fullBit(oldp+2,(vlTOPp->RST_N));
        tracep->fullSData(oldp+3,(vlTOPp->read_A_a_in),16);
        tracep->fullBit(oldp+4,(vlTOPp->EN_read_A));
        tracep->fullBit(oldp+5,(vlTOPp->RDY_read_A));
        tracep->fullSData(oldp+6,(vlTOPp->read_B_b_in),16);
        tracep->fullBit(oldp+7,(vlTOPp->EN_read_B));
        tracep->fullBit(oldp+8,(vlTOPp->RDY_read_B));
        tracep->fullIData(oldp+9,(vlTOPp->read_C_c_in),32);
        tracep->fullBit(oldp+10,(vlTOPp->EN_read_C));
        tracep->fullBit(oldp+11,(vlTOPp->RDY_read_C));
        tracep->fullBit(oldp+12,(vlTOPp->read_S_s_in));
        tracep->fullBit(oldp+13,(vlTOPp->EN_read_S));
        tracep->fullBit(oldp+14,(vlTOPp->RDY_read_S));
        tracep->fullBit(oldp+15,(vlTOPp->EN_mac_calc));
        tracep->fullIData(oldp+16,(vlTOPp->mac_calc),32);
        tracep->fullBit(oldp+17,(vlTOPp->RDY_mac_calc));
        tracep->fullBit(oldp+18,(vlTOPp->mkCounter__DOT__CLK));
        tracep->fullBit(oldp+19,(vlTOPp->mkCounter__DOT__RST_N));
        tracep->fullSData(oldp+20,(vlTOPp->mkCounter__DOT__read_A_a_in),16);
        tracep->fullBit(oldp+21,(vlTOPp->mkCounter__DOT__EN_read_A));
        tracep->fullBit(oldp+22,(vlTOPp->mkCounter__DOT__RDY_read_A));
        tracep->fullSData(oldp+23,(vlTOPp->mkCounter__DOT__read_B_b_in),16);
        tracep->fullBit(oldp+24,(vlTOPp->mkCounter__DOT__EN_read_B));
        tracep->fullBit(oldp+25,(vlTOPp->mkCounter__DOT__RDY_read_B));
        tracep->fullIData(oldp+26,(vlTOPp->mkCounter__DOT__read_C_c_in),32);
        tracep->fullBit(oldp+27,(vlTOPp->mkCounter__DOT__EN_read_C));
        tracep->fullBit(oldp+28,(vlTOPp->mkCounter__DOT__RDY_read_C));
        tracep->fullBit(oldp+29,(vlTOPp->mkCounter__DOT__read_S_s_in));
        tracep->fullBit(oldp+30,(vlTOPp->mkCounter__DOT__EN_read_S));
        tracep->fullBit(oldp+31,(vlTOPp->mkCounter__DOT__RDY_read_S));
        tracep->fullBit(oldp+32,(vlTOPp->mkCounter__DOT__EN_mac_calc));
        tracep->fullIData(oldp+33,(vlTOPp->mkCounter__DOT__mac_calc),32);
        tracep->fullBit(oldp+34,(vlTOPp->mkCounter__DOT__RDY_mac_calc));
        tracep->fullSData(oldp+35,(vlTOPp->mkCounter__DOT__a),16);
        tracep->fullSData(oldp+36,(vlTOPp->mkCounter__DOT__a_D_IN),16);
        tracep->fullBit(oldp+37,(vlTOPp->mkCounter__DOT__a_EN));
        tracep->fullSData(oldp+38,(vlTOPp->mkCounter__DOT__b),16);
        tracep->fullSData(oldp+39,(vlTOPp->mkCounter__DOT__b_D_IN),16);
        tracep->fullBit(oldp+40,(vlTOPp->mkCounter__DOT__b_EN));
        tracep->fullIData(oldp+41,(vlTOPp->mkCounter__DOT__c),32);
        tracep->fullIData(oldp+42,(vlTOPp->mkCounter__DOT__c_D_IN),32);
        tracep->fullBit(oldp+43,(vlTOPp->mkCounter__DOT__c_EN));
        tracep->fullIData(oldp+44,(vlTOPp->mkCounter__DOT__out),32);
        tracep->fullIData(oldp+45,(vlTOPp->mkCounter__DOT__out_D_IN),32);
        tracep->fullBit(oldp+46,(vlTOPp->mkCounter__DOT__out_EN));
        tracep->fullBit(oldp+47,(vlTOPp->mkCounter__DOT__s));
        tracep->fullBit(oldp+48,(vlTOPp->mkCounter__DOT__s_D_IN));
        tracep->fullBit(oldp+49,(vlTOPp->mkCounter__DOT__s_EN));
        tracep->fullBit(oldp+50,(vlTOPp->mkCounter__DOT__CAN_FIRE_mac_calc));
        tracep->fullBit(oldp+51,(vlTOPp->mkCounter__DOT__CAN_FIRE_read_A));
        tracep->fullBit(oldp+52,(vlTOPp->mkCounter__DOT__CAN_FIRE_read_B));
        tracep->fullBit(oldp+53,(vlTOPp->mkCounter__DOT__CAN_FIRE_read_C));
        tracep->fullBit(oldp+54,(vlTOPp->mkCounter__DOT__CAN_FIRE_read_S));
        tracep->fullBit(oldp+55,(vlTOPp->mkCounter__DOT__WILL_FIRE_mac_calc));
        tracep->fullBit(oldp+56,(vlTOPp->mkCounter__DOT__WILL_FIRE_read_A));
        tracep->fullBit(oldp+57,(vlTOPp->mkCounter__DOT__WILL_FIRE_read_B));
        tracep->fullBit(oldp+58,(vlTOPp->mkCounter__DOT__WILL_FIRE_read_C));
        tracep->fullBit(oldp+59,(vlTOPp->mkCounter__DOT__WILL_FIRE_read_S));
        tracep->fullIData(oldp+60,(vlTOPp->mkCounter__DOT__IF_IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF___05FETC___05Fq2),32);
        tracep->fullIData(oldp+61,(vlTOPp->mkCounter__DOT__IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05FETC___05F_d100),32);
        tracep->fullIData(oldp+62,(vlTOPp->mkCounter__DOT__IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05FETC___05F_d106),32);
        tracep->fullIData(oldp+63,(vlTOPp->mkCounter__DOT__IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05FETC___05F_d113),32);
        tracep->fullIData(oldp+64,(vlTOPp->mkCounter__DOT__IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05FETC___05F_d120),32);
        tracep->fullIData(oldp+65,(vlTOPp->mkCounter__DOT__IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05FETC___05F_d128),32);
        tracep->fullIData(oldp+66,(vlTOPp->mkCounter__DOT__IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05FETC___05F_d136),32);
        tracep->fullIData(oldp+67,(vlTOPp->mkCounter__DOT__IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05FETC___05F_d145),32);
        tracep->fullIData(oldp+68,(vlTOPp->mkCounter__DOT__IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05FETC___05F_d154),32);
        tracep->fullIData(oldp+69,(vlTOPp->mkCounter__DOT__IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05FETC___05F_d73),32);
        tracep->fullIData(oldp+70,(vlTOPp->mkCounter__DOT__IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05FETC___05F_d76),32);
        tracep->fullIData(oldp+71,(vlTOPp->mkCounter__DOT__IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05FETC___05F_d80),32);
        tracep->fullIData(oldp+72,(vlTOPp->mkCounter__DOT__IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05FETC___05F_d84),32);
        tracep->fullIData(oldp+73,(vlTOPp->mkCounter__DOT__IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05FETC___05F_d89),32);
        tracep->fullIData(oldp+74,(vlTOPp->mkCounter__DOT__IF_IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05FETC___05F_d94),32);
        tracep->fullIData(oldp+75,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d167),32);
        tracep->fullIData(oldp+76,(vlTOPp->mkCounter__DOT__product___05F_1___05Fh1618),32);
        tracep->fullIData(oldp+77,(vlTOPp->mkCounter__DOT__product___05F_1___05Fh1619),32);
        tracep->fullIData(oldp+78,(vlTOPp->mkCounter__DOT__product___05F_2___05Fh1572),32);
        tracep->fullIData(oldp+79,(vlTOPp->mkCounter__DOT__product___05Fh2020),32);
        tracep->fullIData(oldp+80,(vlTOPp->mkCounter__DOT__product___05Fh2043),32);
        tracep->fullIData(oldp+81,(vlTOPp->mkCounter__DOT__product___05Fh2066),32);
        tracep->fullIData(oldp+82,(vlTOPp->mkCounter__DOT__product___05Fh2089),32);
        tracep->fullIData(oldp+83,(vlTOPp->mkCounter__DOT__product___05Fh2112),32);
        tracep->fullIData(oldp+84,(vlTOPp->mkCounter__DOT__product___05Fh2135),32);
        tracep->fullIData(oldp+85,(vlTOPp->mkCounter__DOT__product___05Fh2158),32);
        tracep->fullIData(oldp+86,(vlTOPp->mkCounter__DOT__product___05Fh2181),32);
        tracep->fullIData(oldp+87,(vlTOPp->mkCounter__DOT__product___05Fh2204),32);
        tracep->fullIData(oldp+88,(vlTOPp->mkCounter__DOT__product___05Fh2227),32);
        tracep->fullIData(oldp+89,(vlTOPp->mkCounter__DOT__product___05Fh2250),32);
        tracep->fullIData(oldp+90,(vlTOPp->mkCounter__DOT__product___05Fh2273),32);
        tracep->fullIData(oldp+91,(vlTOPp->mkCounter__DOT__product___05Fh2296),32);
        tracep->fullIData(oldp+92,(vlTOPp->mkCounter__DOT__product___05Fh2319),32);
        tracep->fullIData(oldp+93,(vlTOPp->mkCounter__DOT__product___05Fh2342),32);
        tracep->fullIData(oldp+94,(vlTOPp->mkCounter__DOT__x___05Fh301),32);
        tracep->fullIData(oldp+95,(vlTOPp->mkCounter__DOT__x___05Fh821),32);
        tracep->fullIData(oldp+96,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d403),30);
        tracep->fullIData(oldp+97,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d402),28);
        tracep->fullIData(oldp+98,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d401),26);
        tracep->fullIData(oldp+99,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d400),24);
        tracep->fullIData(oldp+100,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d399),22);
        tracep->fullIData(oldp+101,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d398),20);
        tracep->fullIData(oldp+102,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d397),18);
        tracep->fullSData(oldp+103,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d396),16);
        tracep->fullSData(oldp+104,(vlTOPp->mkCounter__DOT__IF_a_BIT_15_THEN_INV_a_PLUS_1_ELSE_a___05Fq1),16);
        tracep->fullSData(oldp+105,(vlTOPp->mkCounter__DOT__IF_b_BIT_0_THEN_1_CONCAT_a_0_BITS_6_TO_0_1_2_E_ETC___05F_d13),16);
        tracep->fullSData(oldp+106,(vlTOPp->mkCounter__DOT__IF_b_BIT_15_8_THEN_INV_b_0_PLUS_1_1_ELSE_b___05F_d52),16);
        tracep->fullSData(oldp+107,(vlTOPp->mkCounter__DOT__IF_b_BIT_1_THEN_IF_b_BIT_0_THEN_1_CONCAT_a_0_B_ETC___05F_d16),16);
        tracep->fullSData(oldp+108,(vlTOPp->mkCounter__DOT__IF_b_BIT_2_THEN_IF_b_BIT_1_THEN_IF_b_BIT_0_THE_ETC___05F_d20),16);
        tracep->fullSData(oldp+109,(vlTOPp->mkCounter__DOT__IF_b_BIT_3_THEN_IF_b_BIT_2_THEN_IF_b_BIT_1_THE_ETC___05F_d24),16);
        tracep->fullSData(oldp+110,(vlTOPp->mkCounter__DOT__IF_b_BIT_4_THEN_IF_b_BIT_3_THEN_IF_b_BIT_2_THE_ETC___05F_d29),16);
        tracep->fullSData(oldp+111,(vlTOPp->mkCounter__DOT__IF_b_BIT_5_THEN_IF_b_BIT_4_THEN_IF_b_BIT_3_THE_ETC___05F_d34),16);
        tracep->fullSData(oldp+112,(vlTOPp->mkCounter__DOT__product___05Fh586),16);
        tracep->fullSData(oldp+113,(vlTOPp->mkCounter__DOT__product___05Fh609),16);
        tracep->fullSData(oldp+114,(vlTOPp->mkCounter__DOT__product___05Fh632),16);
        tracep->fullSData(oldp+115,(vlTOPp->mkCounter__DOT__product___05Fh655),16);
        tracep->fullSData(oldp+116,(vlTOPp->mkCounter__DOT__product___05Fh678),16);
        tracep->fullSData(oldp+117,(vlTOPp->mkCounter__DOT__product___05Fh701),16);
        tracep->fullSData(oldp+118,(vlTOPp->mkCounter__DOT__product___05Fh724),16);
        tracep->fullSData(oldp+119,(vlTOPp->mkCounter__DOT__result_mant___05Fh323),16);
        tracep->fullSData(oldp+120,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d395),14);
        tracep->fullSData(oldp+121,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d394),12);
        tracep->fullSData(oldp+122,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d393),10);
        tracep->fullCData(oldp+123,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d392),8);
        tracep->fullCData(oldp+124,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d391),6);
        tracep->fullCData(oldp+125,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d390),4);
        tracep->fullCData(oldp+126,(vlTOPp->mkCounter__DOT__IF_a_0_BIT_15_7_EQ_b_BIT_15_8_9_THEN_IF_IF_b_B_ETC___05F_d389),2);
        tracep->fullBit(oldp+127,(vlTOPp->mkCounter__DOT__x___05Fh2493));
        tracep->fullBit(oldp+128,(vlTOPp->mkCounter__DOT__x___05Fh2687));
        tracep->fullBit(oldp+129,(vlTOPp->mkCounter__DOT__x___05Fh2746));
        tracep->fullBit(oldp+130,(vlTOPp->mkCounter__DOT__x___05Fh2881));
        tracep->fullBit(oldp+131,(vlTOPp->mkCounter__DOT__x___05Fh2940));
        tracep->fullBit(oldp+132,(vlTOPp->mkCounter__DOT__x___05Fh3075));
        tracep->fullBit(oldp+133,(vlTOPp->mkCounter__DOT__x___05Fh3134));
        tracep->fullBit(oldp+134,(vlTOPp->mkCounter__DOT__x___05Fh3269));
        tracep->fullBit(oldp+135,(vlTOPp->mkCounter__DOT__x___05Fh3328));
        tracep->fullBit(oldp+136,(vlTOPp->mkCounter__DOT__x___05Fh3463));
        tracep->fullBit(oldp+137,(vlTOPp->mkCounter__DOT__x___05Fh3522));
        tracep->fullBit(oldp+138,(vlTOPp->mkCounter__DOT__x___05Fh3657));
        tracep->fullBit(oldp+139,(vlTOPp->mkCounter__DOT__x___05Fh3716));
        tracep->fullBit(oldp+140,(vlTOPp->mkCounter__DOT__x___05Fh3851));
        tracep->fullBit(oldp+141,(vlTOPp->mkCounter__DOT__x___05Fh3910));
        tracep->fullBit(oldp+142,(vlTOPp->mkCounter__DOT__x___05Fh4045));
        tracep->fullBit(oldp+143,(vlTOPp->mkCounter__DOT__x___05Fh4104));
        tracep->fullBit(oldp+144,(vlTOPp->mkCounter__DOT__x___05Fh4239));
        tracep->fullBit(oldp+145,(vlTOPp->mkCounter__DOT__x___05Fh4298));
        tracep->fullBit(oldp+146,(vlTOPp->mkCounter__DOT__x___05Fh4433));
        tracep->fullBit(oldp+147,(vlTOPp->mkCounter__DOT__x___05Fh4492));
        tracep->fullBit(oldp+148,(vlTOPp->mkCounter__DOT__x___05Fh4627));
        tracep->fullBit(oldp+149,(vlTOPp->mkCounter__DOT__x___05Fh4686));
        tracep->fullBit(oldp+150,(vlTOPp->mkCounter__DOT__x___05Fh4821));
        tracep->fullBit(oldp+151,(vlTOPp->mkCounter__DOT__x___05Fh4880));
        tracep->fullBit(oldp+152,(vlTOPp->mkCounter__DOT__x___05Fh5015));
        tracep->fullBit(oldp+153,(vlTOPp->mkCounter__DOT__x___05Fh5074));
        tracep->fullBit(oldp+154,(vlTOPp->mkCounter__DOT__x___05Fh5209));
        tracep->fullBit(oldp+155,(vlTOPp->mkCounter__DOT__x___05Fh5268));
        tracep->fullBit(oldp+156,(vlTOPp->mkCounter__DOT__x___05Fh5403));
        tracep->fullBit(oldp+157,(vlTOPp->mkCounter__DOT__x___05Fh5462));
        tracep->fullBit(oldp+158,(vlTOPp->mkCounter__DOT__x___05Fh5597));
        tracep->fullBit(oldp+159,(vlTOPp->mkCounter__DOT__x___05Fh5656));
        tracep->fullBit(oldp+160,(vlTOPp->mkCounter__DOT__x___05Fh5791));
        tracep->fullBit(oldp+161,(vlTOPp->mkCounter__DOT__x___05Fh5850));
        tracep->fullBit(oldp+162,(vlTOPp->mkCounter__DOT__x___05Fh5985));
        tracep->fullBit(oldp+163,(vlTOPp->mkCounter__DOT__x___05Fh6044));
        tracep->fullBit(oldp+164,(vlTOPp->mkCounter__DOT__x___05Fh6179));
        tracep->fullBit(oldp+165,(vlTOPp->mkCounter__DOT__x___05Fh6238));
        tracep->fullBit(oldp+166,(vlTOPp->mkCounter__DOT__x___05Fh6373));
        tracep->fullBit(oldp+167,(vlTOPp->mkCounter__DOT__x___05Fh6432));
        tracep->fullBit(oldp+168,(vlTOPp->mkCounter__DOT__x___05Fh6567));
        tracep->fullBit(oldp+169,(vlTOPp->mkCounter__DOT__x___05Fh6626));
        tracep->fullBit(oldp+170,(vlTOPp->mkCounter__DOT__x___05Fh6761));
        tracep->fullBit(oldp+171,(vlTOPp->mkCounter__DOT__x___05Fh6820));
        tracep->fullBit(oldp+172,(vlTOPp->mkCounter__DOT__x___05Fh6955));
        tracep->fullBit(oldp+173,(vlTOPp->mkCounter__DOT__x___05Fh7014));
        tracep->fullBit(oldp+174,(vlTOPp->mkCounter__DOT__x___05Fh7149));
        tracep->fullBit(oldp+175,(vlTOPp->mkCounter__DOT__x___05Fh7208));
        tracep->fullBit(oldp+176,(vlTOPp->mkCounter__DOT__x___05Fh7343));
        tracep->fullBit(oldp+177,(vlTOPp->mkCounter__DOT__x___05Fh7402));
        tracep->fullBit(oldp+178,(vlTOPp->mkCounter__DOT__x___05Fh7537));
        tracep->fullBit(oldp+179,(vlTOPp->mkCounter__DOT__x___05Fh7596));
        tracep->fullBit(oldp+180,(vlTOPp->mkCounter__DOT__x___05Fh7731));
        tracep->fullBit(oldp+181,(vlTOPp->mkCounter__DOT__x___05Fh7790));
        tracep->fullBit(oldp+182,(vlTOPp->mkCounter__DOT__x___05Fh7925));
        tracep->fullBit(oldp+183,(vlTOPp->mkCounter__DOT__x___05Fh7984));
        tracep->fullBit(oldp+184,(vlTOPp->mkCounter__DOT__x___05Fh8119));
        tracep->fullBit(oldp+185,(vlTOPp->mkCounter__DOT__x___05Fh8178));
        tracep->fullBit(oldp+186,(vlTOPp->mkCounter__DOT__x___05Fh8313));
        tracep->fullBit(oldp+187,(vlTOPp->mkCounter__DOT__x___05Fh8372));
        tracep->fullBit(oldp+188,(vlTOPp->mkCounter__DOT__y___05Fh2494));
        tracep->fullBit(oldp+189,(vlTOPp->mkCounter__DOT__y___05Fh2688));
        tracep->fullBit(oldp+190,(vlTOPp->mkCounter__DOT__y___05Fh2747));
        tracep->fullBit(oldp+191,(vlTOPp->mkCounter__DOT__y___05Fh2882));
        tracep->fullBit(oldp+192,(vlTOPp->mkCounter__DOT__y___05Fh2941));
        tracep->fullBit(oldp+193,(vlTOPp->mkCounter__DOT__y___05Fh3076));
        tracep->fullBit(oldp+194,(vlTOPp->mkCounter__DOT__y___05Fh3135));
        tracep->fullBit(oldp+195,(vlTOPp->mkCounter__DOT__y___05Fh3270));
        tracep->fullBit(oldp+196,(vlTOPp->mkCounter__DOT__y___05Fh3329));
        tracep->fullBit(oldp+197,(vlTOPp->mkCounter__DOT__y___05Fh3464));
        tracep->fullBit(oldp+198,(vlTOPp->mkCounter__DOT__y___05Fh3523));
        tracep->fullBit(oldp+199,(vlTOPp->mkCounter__DOT__y___05Fh3658));
        tracep->fullBit(oldp+200,(vlTOPp->mkCounter__DOT__y___05Fh3717));
        tracep->fullBit(oldp+201,(vlTOPp->mkCounter__DOT__y___05Fh3852));
        tracep->fullBit(oldp+202,(vlTOPp->mkCounter__DOT__y___05Fh3911));
        tracep->fullBit(oldp+203,(vlTOPp->mkCounter__DOT__y___05Fh4046));
        tracep->fullBit(oldp+204,(vlTOPp->mkCounter__DOT__y___05Fh4105));
        tracep->fullBit(oldp+205,(vlTOPp->mkCounter__DOT__y___05Fh4240));
        tracep->fullBit(oldp+206,(vlTOPp->mkCounter__DOT__y___05Fh4299));
        tracep->fullBit(oldp+207,(vlTOPp->mkCounter__DOT__y___05Fh4434));
        tracep->fullBit(oldp+208,(vlTOPp->mkCounter__DOT__y___05Fh4493));
        tracep->fullBit(oldp+209,(vlTOPp->mkCounter__DOT__y___05Fh4628));
        tracep->fullBit(oldp+210,(vlTOPp->mkCounter__DOT__y___05Fh4687));
        tracep->fullBit(oldp+211,(vlTOPp->mkCounter__DOT__y___05Fh4822));
        tracep->fullBit(oldp+212,(vlTOPp->mkCounter__DOT__y___05Fh4881));
        tracep->fullBit(oldp+213,(vlTOPp->mkCounter__DOT__y___05Fh5016));
        tracep->fullBit(oldp+214,(vlTOPp->mkCounter__DOT__y___05Fh5075));
        tracep->fullBit(oldp+215,(vlTOPp->mkCounter__DOT__y___05Fh5210));
        tracep->fullBit(oldp+216,(vlTOPp->mkCounter__DOT__y___05Fh5269));
        tracep->fullBit(oldp+217,(vlTOPp->mkCounter__DOT__y___05Fh5404));
        tracep->fullBit(oldp+218,(vlTOPp->mkCounter__DOT__y___05Fh5463));
        tracep->fullBit(oldp+219,(vlTOPp->mkCounter__DOT__y___05Fh5598));
        tracep->fullBit(oldp+220,(vlTOPp->mkCounter__DOT__y___05Fh5657));
        tracep->fullBit(oldp+221,(vlTOPp->mkCounter__DOT__y___05Fh5792));
        tracep->fullBit(oldp+222,(vlTOPp->mkCounter__DOT__y___05Fh5851));
        tracep->fullBit(oldp+223,(vlTOPp->mkCounter__DOT__y___05Fh5986));
        tracep->fullBit(oldp+224,(vlTOPp->mkCounter__DOT__y___05Fh6045));
        tracep->fullBit(oldp+225,(vlTOPp->mkCounter__DOT__y___05Fh6180));
        tracep->fullBit(oldp+226,(vlTOPp->mkCounter__DOT__y___05Fh6239));
        tracep->fullBit(oldp+227,(vlTOPp->mkCounter__DOT__y___05Fh6374));
        tracep->fullBit(oldp+228,(vlTOPp->mkCounter__DOT__y___05Fh6433));
        tracep->fullBit(oldp+229,(vlTOPp->mkCounter__DOT__y___05Fh6568));
        tracep->fullBit(oldp+230,(vlTOPp->mkCounter__DOT__y___05Fh6627));
        tracep->fullBit(oldp+231,(vlTOPp->mkCounter__DOT__y___05Fh6762));
        tracep->fullBit(oldp+232,(vlTOPp->mkCounter__DOT__y___05Fh6821));
        tracep->fullBit(oldp+233,(vlTOPp->mkCounter__DOT__y___05Fh6956));
        tracep->fullBit(oldp+234,(vlTOPp->mkCounter__DOT__y___05Fh7015));
        tracep->fullBit(oldp+235,(vlTOPp->mkCounter__DOT__y___05Fh7150));
        tracep->fullBit(oldp+236,(vlTOPp->mkCounter__DOT__y___05Fh7209));
        tracep->fullBit(oldp+237,(vlTOPp->mkCounter__DOT__y___05Fh7344));
        tracep->fullBit(oldp+238,(vlTOPp->mkCounter__DOT__y___05Fh7403));
        tracep->fullBit(oldp+239,(vlTOPp->mkCounter__DOT__y___05Fh7538));
        tracep->fullBit(oldp+240,(vlTOPp->mkCounter__DOT__y___05Fh7597));
        tracep->fullBit(oldp+241,(vlTOPp->mkCounter__DOT__y___05Fh7732));
        tracep->fullBit(oldp+242,(vlTOPp->mkCounter__DOT__y___05Fh7791));
        tracep->fullBit(oldp+243,(vlTOPp->mkCounter__DOT__y___05Fh7926));
        tracep->fullBit(oldp+244,(vlTOPp->mkCounter__DOT__y___05Fh7985));
        tracep->fullBit(oldp+245,(vlTOPp->mkCounter__DOT__y___05Fh8120));
        tracep->fullBit(oldp+246,(vlTOPp->mkCounter__DOT__y___05Fh8179));
        tracep->fullBit(oldp+247,(vlTOPp->mkCounter__DOT__y___05Fh8314));
        tracep->fullBit(oldp+248,(vlTOPp->mkCounter__DOT__y___05Fh8373));
    }
}
